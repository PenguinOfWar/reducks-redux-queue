// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`mounts without crashing 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <Connect(App)>
    <App
      add={[Function]}
      reducks={
        Object {
          "jobs": Array [],
          "running": false,
        }
      }
      routing={
        Object {
          "locationBeforeTransitions": null,
        }
      }
      toastr={
        Object {
          "confirm": null,
          "toastrs": Array [],
        }
      }
    >
      <div
        className="app container-fluid"
      >
        <div
          className="row"
        >
          <div
            className="container"
          >
            <div
              className="row"
            >
              <div
                className="col-12"
              >
                <div
                  className="jumbotron bg-secondary text-white text-center"
                >
                  <div
                    className="row"
                  >
                    <div
                      className="col-lg-6 offset-lg-3"
                    >
                      <figure
                        className="figure"
                      >
                        <img
                          alt="Reducks"
                          className="img-fluid logo"
                          src="logo.png"
                        />
                        <figcaption
                          className="figure-caption text-white sr-only"
                        >
                          Logo credit:
                           
                          <a
                            className="text-light"
                            href="https://github.com/damianryann"
                          >
                            Damian Ryan
                          </a>
                        </figcaption>
                      </figure>
                    </div>
                  </div>
                  <h1
                    className="display-5"
                  >
                    <span
                      className="sr-only"
                    >
                      Reducks 
                    </span>
                    (Redux Queue)
                  </h1>
                  <p
                    className="lead"
                  >
                    A redux-observable driven FIFO (first in - first out) queueing system for redux and redux-thunk.
                  </p>
                  <p
                    className="lead"
                  >
                    Reducks is also fully compatible with react-redux. Please see the source code of this page for examples.
                  </p>
                  <p
                    className="lead"
                  >
                    Logo credit:
                     
                    <a
                      className="badge badge-dark"
                      href="https://github.com/damianryann"
                    >
                      Damian Ryan
                    </a>
                  </p>
                  <hr
                    className="my-4"
                  />
                  <p>
                    On this page you will find interactive examples. Please consult the documentation for further details and a tutorial.
                  </p>
                  <ul
                    className="list-inline"
                  >
                    <li
                      className="list-inline-item"
                    >
                      <a
                        className="btn btn-dark btn-lg"
                        href="https://github.com/PenguinOfWar/reducks-redux-queue"
                        rel="noopener noreferrer"
                        role="button"
                        target="_blank"
                      >
                        Documentation
                      </a>
                    </li>
                    <li
                      className="list-inline-item"
                    >
                      <a
                        className="btn btn-dark btn-lg"
                        href="https://github.com/PenguinOfWar/reducks-redux-queue/issues"
                        rel="noopener noreferrer"
                        role="button"
                        target="_blank"
                      >
                        Support
                      </a>
                    </li>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div
          className="row"
        >
          <div
            className="container pb-4"
          >
            <div
              className="row"
            >
              <div
                className="col-12"
              >
                <div
                  className="card bg-secondary text-white"
                >
                  <div
                    className="card-body"
                  >
                    <h2
                      className="card-title display-4"
                    >
                      Demos & Examples
                    </h2>
                    <p
                      className="card-text"
                    >
                      The following examples are generic usage examples that assume you have either followed the tutorial to get started, or know enough that this will just make sense.
                    </p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div
          className="row"
        >
          <Simple
            add={[Function]}
            reducks={
              Object {
                "jobs": Array [],
                "running": false,
              }
            }
            routing={
              Object {
                "locationBeforeTransitions": null,
              }
            }
            toastr={
              Object {
                "confirm": null,
                "toastrs": Array [],
              }
            }
          >
            <div
              className="container pb-4"
            >
              <div
                className="row"
              >
                <div
                  className="col-12"
                >
                  <div
                    className="card bg-secondary text-white"
                  >
                    <div
                      className="card-body"
                    >
                      <h2
                        className="card-title display-4"
                      >
                        Simple
                      </h2>
                      <p
                        className="card-text"
                      >
                        Clicking the button below will add a single notfication job to the queue.
                      </p>
                      <p
                        className="card-text"
                      >
                        The behaviour of the queue system is demonstrated by the 5 second timeout within the Promise. In practice, this could be web request or some other long-running task.
                      </p>
                      <button
                        className="btn btn-dark"
                        onClick={[Function]}
                      >
                        Enqueue
                      </button>
                      <hr
                        className="my-4"
                      />
                      <_default
                        codeBlock={true}
                        language="jsx"
                        showLineNumbers="true"
                        text="import React from 'react';
import { toastr } from 'react-redux-toastr';
                
const Simple = (props = {}) => {
  const { add } = props;

  return <button 
          onClick={() =>
            add('addToQueue', async ({ job }) => {
              const { id, name } = job;

              console.log('About to wait');
              console.log(id, name);
              await new Promise(resolve =>
                setTimeout(() => {
                  console.log('Waited 5000ms');
                  toastr.success('Success', 'Well done for waiting.');
                  resolve();
                }, 5000)
              );
            })}
          type=\\"button\\">
            Enqueue
          </button>
};

export default Simple;"
                        theme={
                          Object {
                            "additionColor": "#e6e1dc",
                            "attributeColor": "#cda869",
                            "backgroundColor": "#232323",
                            "builtInColor": "#6d9cbe",
                            "bulletColor": "#6d9cbe",
                            "codeColor": "#e6e1dc",
                            "commentColor": "#bc9458",
                            "deletionColor": "#e6e1dc",
                            "docTagColor": "#e6e1dc",
                            "functionColor": "#e6e1dc",
                            "keywordColor": "#c26230",
                            "lineNumberBgColor": "#232323",
                            "lineNumberColor": "#e6e1dc",
                            "linkColor": "#6d9cbe",
                            "literalColor": "#e6e1dc",
                            "metaColor": "#9b859d",
                            "metaKeywordColor": "#e6e1dc",
                            "nameColor": "#e8bf6a",
                            "numberColor": "#a5c261",
                            "quoteColor": "#bc9458",
                            "regexpColor": "#a5c261",
                            "sectionColor": "#ffc66d",
                            "selectorAttributeColor": "#c26230",
                            "selectorClassColor": "#9b703f",
                            "selectorIdColor": "#8b98ab",
                            "stringColor": "#a5c261",
                            "substringColor": "#519f50",
                            "symbolColor": "#6d9cbe",
                            "templateTagColor": "#e6e1dc",
                            "templateVariableColor": "#a5c261",
                            "textColor": "#e6e1dc",
                            "titleColor": "#ffc66d",
                            "typeColor": "#da4939",
                            "variableColor": "#a5c261",
                          }
                        }
                        wrapLines={true}
                      >
                        <ThemeProvider
                          theme={Object {}}
                        >
                          <WithTheme(_default)
                            codeBlock={true}
                            language="jsx"
                            showLineNumbers="true"
                            text="import React from 'react';
import { toastr } from 'react-redux-toastr';
                
const Simple = (props = {}) => {
  const { add } = props;

  return <button 
          onClick={() =>
            add('addToQueue', async ({ job }) => {
              const { id, name } = job;

              console.log('About to wait');
              console.log(id, name);
              await new Promise(resolve =>
                setTimeout(() => {
                  console.log('Waited 5000ms');
                  toastr.success('Success', 'Well done for waiting.');
                  resolve();
                }, 5000)
              );
            })}
          type=\\"button\\">
            Enqueue
          </button>
};

export default Simple;"
                            theme={
                              Object {
                                "additionColor": "#e6e1dc",
                                "attributeColor": "#cda869",
                                "backgroundColor": "#232323",
                                "builtInColor": "#6d9cbe",
                                "bulletColor": "#6d9cbe",
                                "codeColor": "#e6e1dc",
                                "commentColor": "#bc9458",
                                "deletionColor": "#e6e1dc",
                                "docTagColor": "#e6e1dc",
                                "functionColor": "#e6e1dc",
                                "keywordColor": "#c26230",
                                "lineNumberBgColor": "#232323",
                                "lineNumberColor": "#e6e1dc",
                                "linkColor": "#6d9cbe",
                                "literalColor": "#e6e1dc",
                                "metaColor": "#9b859d",
                                "metaKeywordColor": "#e6e1dc",
                                "nameColor": "#e8bf6a",
                                "numberColor": "#a5c261",
                                "quoteColor": "#bc9458",
                                "regexpColor": "#a5c261",
                                "sectionColor": "#ffc66d",
                                "selectorAttributeColor": "#c26230",
                                "selectorClassColor": "#9b703f",
                                "selectorIdColor": "#8b98ab",
                                "stringColor": "#a5c261",
                                "substringColor": "#519f50",
                                "symbolColor": "#6d9cbe",
                                "templateTagColor": "#e6e1dc",
                                "templateVariableColor": "#a5c261",
                                "textColor": "#e6e1dc",
                                "titleColor": "#ffc66d",
                                "typeColor": "#da4939",
                                "variableColor": "#a5c261",
                              }
                            }
                            wrapLines={true}
                          >
                            <_default
                              codeBlock={true}
                              language="jsx"
                              showLineNumbers="true"
                              text="import React from 'react';
import { toastr } from 'react-redux-toastr';
                
const Simple = (props = {}) => {
  const { add } = props;

  return <button 
          onClick={() =>
            add('addToQueue', async ({ job }) => {
              const { id, name } = job;

              console.log('About to wait');
              console.log(id, name);
              await new Promise(resolve =>
                setTimeout(() => {
                  console.log('Waited 5000ms');
                  toastr.success('Success', 'Well done for waiting.');
                  resolve();
                }, 5000)
              );
            })}
          type=\\"button\\">
            Enqueue
          </button>
};

export default Simple;"
                              theme={
                                Object {
                                  "additionColor": "#e6e1dc",
                                  "attributeColor": "#cda869",
                                  "backgroundColor": "#232323",
                                  "builtInColor": "#6d9cbe",
                                  "bulletColor": "#6d9cbe",
                                  "codeColor": "#e6e1dc",
                                  "commentColor": "#bc9458",
                                  "deletionColor": "#e6e1dc",
                                  "docTagColor": "#e6e1dc",
                                  "functionColor": "#e6e1dc",
                                  "keywordColor": "#c26230",
                                  "lineNumberBgColor": "#232323",
                                  "lineNumberColor": "#e6e1dc",
                                  "linkColor": "#6d9cbe",
                                  "literalColor": "#e6e1dc",
                                  "metaColor": "#9b859d",
                                  "metaKeywordColor": "#e6e1dc",
                                  "nameColor": "#e8bf6a",
                                  "numberColor": "#a5c261",
                                  "quoteColor": "#bc9458",
                                  "regexpColor": "#a5c261",
                                  "sectionColor": "#ffc66d",
                                  "selectorAttributeColor": "#c26230",
                                  "selectorClassColor": "#9b703f",
                                  "selectorIdColor": "#8b98ab",
                                  "stringColor": "#a5c261",
                                  "substringColor": "#519f50",
                                  "symbolColor": "#6d9cbe",
                                  "templateTagColor": "#e6e1dc",
                                  "templateVariableColor": "#a5c261",
                                  "textColor": "#e6e1dc",
                                  "titleColor": "#ffc66d",
                                  "typeColor": "#da4939",
                                  "variableColor": "#a5c261",
                                }
                              }
                              wrapLines={true}
                            >
                              <CopyBlock__Snippet
                                codeBlock={true}
                                theme={
                                  Object {
                                    "additionColor": "#e6e1dc",
                                    "attributeColor": "#cda869",
                                    "backgroundColor": "#232323",
                                    "builtInColor": "#6d9cbe",
                                    "bulletColor": "#6d9cbe",
                                    "codeColor": "#e6e1dc",
                                    "commentColor": "#bc9458",
                                    "deletionColor": "#e6e1dc",
                                    "docTagColor": "#e6e1dc",
                                    "functionColor": "#e6e1dc",
                                    "keywordColor": "#c26230",
                                    "lineNumberBgColor": "#232323",
                                    "lineNumberColor": "#e6e1dc",
                                    "linkColor": "#6d9cbe",
                                    "literalColor": "#e6e1dc",
                                    "metaColor": "#9b859d",
                                    "metaKeywordColor": "#e6e1dc",
                                    "nameColor": "#e8bf6a",
                                    "numberColor": "#a5c261",
                                    "quoteColor": "#bc9458",
                                    "regexpColor": "#a5c261",
                                    "sectionColor": "#ffc66d",
                                    "selectorAttributeColor": "#c26230",
                                    "selectorClassColor": "#9b703f",
                                    "selectorIdColor": "#8b98ab",
                                    "stringColor": "#a5c261",
                                    "substringColor": "#519f50",
                                    "symbolColor": "#6d9cbe",
                                    "templateTagColor": "#e6e1dc",
                                    "templateVariableColor": "#a5c261",
                                    "textColor": "#e6e1dc",
                                    "titleColor": "#ffc66d",
                                    "typeColor": "#da4939",
                                    "variableColor": "#a5c261",
                                  }
                                }
                              >
                                <StyledComponent
                                  codeBlock={true}
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "CopyBlock__Snippet-sc-109lwr7-1",
                                        "isStatic": false,
                                        "lastClassName": "eUqWrH",
                                        "rules": Array [
                                          "display:flex;flex-wrap:wrap;position:relative;background:",
                                          [Function],
                                          ";border-radius:0.25rem;padding:",
                                          [Function],
                                          ";",
                                        ],
                                      },
                                      "displayName": "CopyBlock__Snippet",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "CopyBlock__Snippet-sc-109lwr7-1",
                                      "target": "div",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  theme={
                                    Object {
                                      "additionColor": "#e6e1dc",
                                      "attributeColor": "#cda869",
                                      "backgroundColor": "#232323",
                                      "builtInColor": "#6d9cbe",
                                      "bulletColor": "#6d9cbe",
                                      "codeColor": "#e6e1dc",
                                      "commentColor": "#bc9458",
                                      "deletionColor": "#e6e1dc",
                                      "docTagColor": "#e6e1dc",
                                      "functionColor": "#e6e1dc",
                                      "keywordColor": "#c26230",
                                      "lineNumberBgColor": "#232323",
                                      "lineNumberColor": "#e6e1dc",
                                      "linkColor": "#6d9cbe",
                                      "literalColor": "#e6e1dc",
                                      "metaColor": "#9b859d",
                                      "metaKeywordColor": "#e6e1dc",
                                      "nameColor": "#e8bf6a",
                                      "numberColor": "#a5c261",
                                      "quoteColor": "#bc9458",
                                      "regexpColor": "#a5c261",
                                      "sectionColor": "#ffc66d",
                                      "selectorAttributeColor": "#c26230",
                                      "selectorClassColor": "#9b703f",
                                      "selectorIdColor": "#8b98ab",
                                      "stringColor": "#a5c261",
                                      "substringColor": "#519f50",
                                      "symbolColor": "#6d9cbe",
                                      "templateTagColor": "#e6e1dc",
                                      "templateVariableColor": "#a5c261",
                                      "textColor": "#e6e1dc",
                                      "titleColor": "#ffc66d",
                                      "typeColor": "#da4939",
                                      "variableColor": "#a5c261",
                                    }
                                  }
                                >
                                  <div
                                    className="CopyBlock__Snippet-sc-109lwr7-1 eUqWrH"
                                  >
                                    <CodeBlock
                                      codeBlockStyle={Object {}}
                                      codeStyle={Object {}}
                                      highlight=""
                                      language="jsx"
                                      showLineNumbers="true"
                                      text="import React from 'react';
import { toastr } from 'react-redux-toastr';
                
const Simple = (props = {}) => {
  const { add } = props;

  return <button 
          onClick={() =>
            add('addToQueue', async ({ job }) => {
              const { id, name } = job;

              console.log('About to wait');
              console.log(id, name);
              await new Promise(resolve =>
                setTimeout(() => {
                  console.log('Waited 5000ms');
                  toastr.success('Success', 'Well done for waiting.');
                  resolve();
                }, 5000)
              );
            })}
          type=\\"button\\">
            Enqueue
          </button>
};

export default Simple;"
                                      theme={
                                        Object {
                                          "additionColor": "#e6e1dc",
                                          "attributeColor": "#cda869",
                                          "backgroundColor": "#232323",
                                          "builtInColor": "#6d9cbe",
                                          "bulletColor": "#6d9cbe",
                                          "codeColor": "#e6e1dc",
                                          "commentColor": "#bc9458",
                                          "deletionColor": "#e6e1dc",
                                          "docTagColor": "#e6e1dc",
                                          "functionColor": "#e6e1dc",
                                          "keywordColor": "#c26230",
                                          "lineNumberBgColor": "#232323",
                                          "lineNumberColor": "#e6e1dc",
                                          "linkColor": "#6d9cbe",
                                          "literalColor": "#e6e1dc",
                                          "metaColor": "#9b859d",
                                          "metaKeywordColor": "#e6e1dc",
                                          "nameColor": "#e8bf6a",
                                          "numberColor": "#a5c261",
                                          "quoteColor": "#bc9458",
                                          "regexpColor": "#a5c261",
                                          "sectionColor": "#ffc66d",
                                          "selectorAttributeColor": "#c26230",
                                          "selectorClassColor": "#9b703f",
                                          "selectorIdColor": "#8b98ab",
                                          "stringColor": "#a5c261",
                                          "substringColor": "#519f50",
                                          "symbolColor": "#6d9cbe",
                                          "templateTagColor": "#e6e1dc",
                                          "templateVariableColor": "#a5c261",
                                          "textColor": "#e6e1dc",
                                          "titleColor": "#ffc66d",
                                          "typeColor": "#da4939",
                                          "variableColor": "#a5c261",
                                        }
                                      }
                                      wrapLines={true}
                                    >
                                      <Code
                                        codeStyle={
                                          Object {
                                            "addition": Object {
                                              "color": "#e6e1dc",
                                            },
                                            "attr-name": Object {
                                              "color": "#cda869",
                                            },
                                            "block-comment": Object {
                                              "color": "#bc9458",
                                              "fontFamily": "inherit",
                                              "fontStyle": "italic",
                                            },
                                            "bold": Object {
                                              "fontWeight": "bolder",
                                            },
                                            "builtin": Object {
                                              "color": "#6d9cbe",
                                            },
                                            "bullet": Object {
                                              "color": "#6d9cbe",
                                            },
                                            "class-name": Object {
                                              "color": "#ffc66d",
                                            },
                                            "code": Object {
                                              "color": "#e6e1dc",
                                            },
                                            "comment": Object {
                                              "color": "#bc9458",
                                              "fontFamily": "inherit",
                                              "fontStyle": "italic",
                                            },
                                            "deletion": Object {
                                              "color": "#e6e1dc",
                                            },
                                            "doctype": Object {
                                              "color": "#e6e1dc",
                                            },
                                            "entity": Object {
                                              "color": "#e6e1dc",
                                            },
                                            "function": Object {
                                              "color": "#e6e1dc",
                                            },
                                            "function-name": Object {
                                              "color": "#ffc66d",
                                            },
                                            "italic": Object {
                                              "fontStyle": "italic",
                                            },
                                            "key": Object {
                                              "color": "#c26230",
                                              "fontWeight": "bolder",
                                            },
                                            "keyword": Object {
                                              "color": "#c26230",
                                              "fontWeight": "bolder",
                                            },
                                            "meta": Object {
                                              "color": "#9b859d",
                                            },
                                            "meta-keyword": Object {
                                              "color": "#e6e1dc",
                                            },
                                            "namespace": Object {
                                              "color": "#e8bf6a",
                                            },
                                            "number": Object {
                                              "color": "#a5c261",
                                            },
                                            "pre[class*=\\"language-\\"]": Object {
                                              "background": "#232323",
                                              "borderRadius": 3,
                                              "color": "#e6e1dc",
                                              "display": "flex",
                                              "fontFamily": "inherit",
                                              "fontSize": "inherit",
                                              "lineHeight": 1.4285714285714286,
                                              "overflowX": "auto",
                                              "whiteSpace": "pre",
                                            },
                                            "quote": Object {
                                              "color": "#bc9458",
                                            },
                                            "regex": Object {
                                              "color": "#a5c261",
                                            },
                                            "section": Object {
                                              "color": "#ffc66d",
                                            },
                                            "selector": Object {
                                              "color": undefined,
                                            },
                                            "selector-attr": Object {
                                              "color": "#c26230",
                                            },
                                            "selector-pseudo": Object {
                                              "color": undefined,
                                            },
                                            "string": Object {
                                              "color": "#a5c261",
                                            },
                                            "substr": Object {
                                              "color": "#519f50",
                                            },
                                            "symbol": Object {
                                              "color": "#6d9cbe",
                                            },
                                            "tag": Object {
                                              "color": "#e6e1dc",
                                            },
                                            "title": Object {
                                              "color": "#ffc66d",
                                            },
                                            "type": Object {
                                              "color": "#da4939",
                                            },
                                            "url": Object {
                                              "color": "#6d9cbe",
                                            },
                                            "variable": Object {
                                              "color": "#a5c261",
                                            },
                                          }
                                        }
                                        codeTagProps={
                                          Object {
                                            "style": Object {
                                              "fontFamily": "inherit",
                                              "fontSize": "inherit",
                                              "lineHeight": 1.4285714285714286,
                                              "padding": 8,
                                            },
                                          }
                                        }
                                        highlight=""
                                        language="jsx"
                                        lineNumberContainerStyle={
                                          Object {
                                            "backgroundColor": "#232323",
                                            "color": "#e6e1dc",
                                            "flexShrink": 0,
                                            "fontSize": "inherit",
                                            "lineHeight": 1.4285714285714286,
                                            "padding": 8,
                                            "textAlign": "right",
                                            "userSelect": "none",
                                          }
                                        }
                                        preTag="span"
                                        showLineNumbers="true"
                                        text="import React from 'react';
import { toastr } from 'react-redux-toastr';
                
const Simple = (props = {}) => {
  const { add } = props;

  return <button 
          onClick={() =>
            add('addToQueue', async ({ job }) => {
              const { id, name } = job;

              console.log('About to wait');
              console.log(id, name);
              await new Promise(resolve =>
                setTimeout(() => {
                  console.log('Waited 5000ms');
                  toastr.success('Success', 'Well done for waiting.');
                  resolve();
                }, 5000)
              );
            })}
          type=\\"button\\">
            Enqueue
          </button>
};

export default Simple;"
                                        theme={Object {}}
                                      >
                                        <ReactAsyncHighlighter
                                          PreTag="span"
                                          codeTagProps={
                                            Object {
                                              "style": Object {
                                                "fontFamily": "inherit",
                                                "fontSize": "inherit",
                                                "lineHeight": 1.4285714285714286,
                                                "padding": 8,
                                              },
                                            }
                                          }
                                          language="jsx"
                                          lineNumberContainerStyle={
                                            Object {
                                              "backgroundColor": "#232323",
                                              "color": "#e6e1dc",
                                              "flexShrink": 0,
                                              "fontSize": "inherit",
                                              "lineHeight": 1.4285714285714286,
                                              "padding": 8,
                                              "textAlign": "right",
                                              "userSelect": "none",
                                            }
                                          }
                                          lineNumberStyle={[Function]}
                                          lineProps={[Function]}
                                          showLineNumbers="true"
                                          style={
                                            Object {
                                              "addition": Object {
                                                "color": "#e6e1dc",
                                              },
                                              "attr-name": Object {
                                                "color": "#cda869",
                                              },
                                              "block-comment": Object {
                                                "color": "#bc9458",
                                                "fontFamily": "inherit",
                                                "fontStyle": "italic",
                                              },
                                              "bold": Object {
                                                "fontWeight": "bolder",
                                              },
                                              "builtin": Object {
                                                "color": "#6d9cbe",
                                              },
                                              "bullet": Object {
                                                "color": "#6d9cbe",
                                              },
                                              "class-name": Object {
                                                "color": "#ffc66d",
                                              },
                                              "code": Object {
                                                "color": "#e6e1dc",
                                              },
                                              "comment": Object {
                                                "color": "#bc9458",
                                                "fontFamily": "inherit",
                                                "fontStyle": "italic",
                                              },
                                              "deletion": Object {
                                                "color": "#e6e1dc",
                                              },
                                              "doctype": Object {
                                                "color": "#e6e1dc",
                                              },
                                              "entity": Object {
                                                "color": "#e6e1dc",
                                              },
                                              "function": Object {
                                                "color": "#e6e1dc",
                                              },
                                              "function-name": Object {
                                                "color": "#ffc66d",
                                              },
                                              "italic": Object {
                                                "fontStyle": "italic",
                                              },
                                              "key": Object {
                                                "color": "#c26230",
                                                "fontWeight": "bolder",
                                              },
                                              "keyword": Object {
                                                "color": "#c26230",
                                                "fontWeight": "bolder",
                                              },
                                              "meta": Object {
                                                "color": "#9b859d",
                                              },
                                              "meta-keyword": Object {
                                                "color": "#e6e1dc",
                                              },
                                              "namespace": Object {
                                                "color": "#e8bf6a",
                                              },
                                              "number": Object {
                                                "color": "#a5c261",
                                              },
                                              "pre[class*=\\"language-\\"]": Object {
                                                "background": "#232323",
                                                "borderRadius": 3,
                                                "color": "#e6e1dc",
                                                "display": "flex",
                                                "fontFamily": "inherit",
                                                "fontSize": "inherit",
                                                "lineHeight": 1.4285714285714286,
                                                "overflowX": "auto",
                                                "whiteSpace": "pre",
                                              },
                                              "quote": Object {
                                                "color": "#bc9458",
                                              },
                                              "regex": Object {
                                                "color": "#a5c261",
                                              },
                                              "section": Object {
                                                "color": "#ffc66d",
                                              },
                                              "selector": Object {
                                                "color": undefined,
                                              },
                                              "selector-attr": Object {
                                                "color": "#c26230",
                                              },
                                              "selector-pseudo": Object {
                                                "color": undefined,
                                              },
                                              "string": Object {
                                                "color": "#a5c261",
                                              },
                                              "substr": Object {
                                                "color": "#519f50",
                                              },
                                              "symbol": Object {
                                                "color": "#6d9cbe",
                                              },
                                              "tag": Object {
                                                "color": "#e6e1dc",
                                              },
                                              "title": Object {
                                                "color": "#ffc66d",
                                              },
                                              "type": Object {
                                                "color": "#da4939",
                                              },
                                              "url": Object {
                                                "color": "#6d9cbe",
                                              },
                                              "variable": Object {
                                                "color": "#a5c261",
                                              },
                                            }
                                          }
                                          wrapLines={false}
                                        >
                                          <SyntaxHighlighter
                                            PreTag="span"
                                            astGenerator={null}
                                            codeTagProps={
                                              Object {
                                                "style": Object {
                                                  "fontFamily": "inherit",
                                                  "fontSize": "inherit",
                                                  "lineHeight": 1.4285714285714286,
                                                  "padding": 8,
                                                },
                                              }
                                            }
                                            language="jsx"
                                            lineNumberContainerStyle={
                                              Object {
                                                "backgroundColor": "#232323",
                                                "color": "#e6e1dc",
                                                "flexShrink": 0,
                                                "fontSize": "inherit",
                                                "lineHeight": 1.4285714285714286,
                                                "padding": 8,
                                                "textAlign": "right",
                                                "userSelect": "none",
                                              }
                                            }
                                            lineNumberStyle={[Function]}
                                            lineProps={[Function]}
                                            showLineNumbers="true"
                                            style={
                                              Object {
                                                "addition": Object {
                                                  "color": "#e6e1dc",
                                                },
                                                "attr-name": Object {
                                                  "color": "#cda869",
                                                },
                                                "block-comment": Object {
                                                  "color": "#bc9458",
                                                  "fontFamily": "inherit",
                                                  "fontStyle": "italic",
                                                },
                                                "bold": Object {
                                                  "fontWeight": "bolder",
                                                },
                                                "builtin": Object {
                                                  "color": "#6d9cbe",
                                                },
                                                "bullet": Object {
                                                  "color": "#6d9cbe",
                                                },
                                                "class-name": Object {
                                                  "color": "#ffc66d",
                                                },
                                                "code": Object {
                                                  "color": "#e6e1dc",
                                                },
                                                "comment": Object {
                                                  "color": "#bc9458",
                                                  "fontFamily": "inherit",
                                                  "fontStyle": "italic",
                                                },
                                                "deletion": Object {
                                                  "color": "#e6e1dc",
                                                },
                                                "doctype": Object {
                                                  "color": "#e6e1dc",
                                                },
                                                "entity": Object {
                                                  "color": "#e6e1dc",
                                                },
                                                "function": Object {
                                                  "color": "#e6e1dc",
                                                },
                                                "function-name": Object {
                                                  "color": "#ffc66d",
                                                },
                                                "italic": Object {
                                                  "fontStyle": "italic",
                                                },
                                                "key": Object {
                                                  "color": "#c26230",
                                                  "fontWeight": "bolder",
                                                },
                                                "keyword": Object {
                                                  "color": "#c26230",
                                                  "fontWeight": "bolder",
                                                },
                                                "meta": Object {
                                                  "color": "#9b859d",
                                                },
                                                "meta-keyword": Object {
                                                  "color": "#e6e1dc",
                                                },
                                                "namespace": Object {
                                                  "color": "#e8bf6a",
                                                },
                                                "number": Object {
                                                  "color": "#a5c261",
                                                },
                                                "pre[class*=\\"language-\\"]": Object {
                                                  "background": "#232323",
                                                  "borderRadius": 3,
                                                  "color": "#e6e1dc",
                                                  "display": "flex",
                                                  "fontFamily": "inherit",
                                                  "fontSize": "inherit",
                                                  "lineHeight": 1.4285714285714286,
                                                  "overflowX": "auto",
                                                  "whiteSpace": "pre",
                                                },
                                                "quote": Object {
                                                  "color": "#bc9458",
                                                },
                                                "regex": Object {
                                                  "color": "#a5c261",
                                                },
                                                "section": Object {
                                                  "color": "#ffc66d",
                                                },
                                                "selector": Object {
                                                  "color": undefined,
                                                },
                                                "selector-attr": Object {
                                                  "color": "#c26230",
                                                },
                                                "selector-pseudo": Object {
                                                  "color": undefined,
                                                },
                                                "string": Object {
                                                  "color": "#a5c261",
                                                },
                                                "substr": Object {
                                                  "color": "#519f50",
                                                },
                                                "symbol": Object {
                                                  "color": "#6d9cbe",
                                                },
                                                "tag": Object {
                                                  "color": "#e6e1dc",
                                                },
                                                "title": Object {
                                                  "color": "#ffc66d",
                                                },
                                                "type": Object {
                                                  "color": "#da4939",
                                                },
                                                "url": Object {
                                                  "color": "#6d9cbe",
                                                },
                                                "variable": Object {
                                                  "color": "#a5c261",
                                                },
                                              }
                                            }
                                            wrapLines={false}
                                          >
                                            <span
                                              style={
                                                Object {
                                                  "background": "#232323",
                                                  "borderRadius": 3,
                                                  "color": "#e6e1dc",
                                                  "display": "flex",
                                                  "fontFamily": "inherit",
                                                  "fontSize": "inherit",
                                                  "lineHeight": 1.4285714285714286,
                                                  "overflowX": "auto",
                                                  "whiteSpace": "pre",
                                                }
                                              }
                                            >
                                              <LineNumbers
                                                codeString="import React from 'react';
import { toastr } from 'react-redux-toastr';
                
const Simple = (props = {}) => {
  const { add } = props;

  return <button 
          onClick={() =>
            add('addToQueue', async ({ job }) => {
              const { id, name } = job;

              console.log('About to wait');
              console.log(id, name);
              await new Promise(resolve =>
                setTimeout(() => {
                  console.log('Waited 5000ms');
                  toastr.success('Success', 'Well done for waiting.');
                  resolve();
                }, 5000)
              );
            })}
          type=\\"button\\">
            Enqueue
          </button>
};

export default Simple;"
                                                codeStyle={
                                                  Object {
                                                    "fontFamily": "inherit",
                                                    "fontSize": "inherit",
                                                    "lineHeight": 1.4285714285714286,
                                                    "padding": 8,
                                                  }
                                                }
                                                containerStyle={
                                                  Object {
                                                    "backgroundColor": "#232323",
                                                    "color": "#e6e1dc",
                                                    "flexShrink": 0,
                                                    "fontSize": "inherit",
                                                    "lineHeight": 1.4285714285714286,
                                                    "padding": 8,
                                                    "textAlign": "right",
                                                    "userSelect": "none",
                                                  }
                                                }
                                                numberStyle={[Function]}
                                                startingLineNumber={1}
                                              >
                                                <code
                                                  style={
                                                    Object {
                                                      "backgroundColor": "#232323",
                                                      "color": "#e6e1dc",
                                                      "flexShrink": 0,
                                                      "fontFamily": "inherit",
                                                      "fontSize": "inherit",
                                                      "lineHeight": 1.4285714285714286,
                                                      "padding": 8,
                                                      "textAlign": "right",
                                                      "userSelect": "none",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-0"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    1

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-1"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    2

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-2"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    3

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-3"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    4

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-4"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    5

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-5"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    6

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-6"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    7

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-7"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    8

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-8"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    9

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-9"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    10

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-10"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    11

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-11"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    12

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-12"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    13

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-13"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    14

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-14"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    15

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-15"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    16

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-16"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    17

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-17"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    18

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-18"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    19

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-19"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    20

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-20"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    21

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-21"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    22

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-22"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    23

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-23"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    24

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-24"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    25

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-25"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    26

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-26"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    27

                                                  </span>
                                                </code>
                                              </LineNumbers>
                                              <code
                                                style={
                                                  Object {
                                                    "fontFamily": "inherit",
                                                    "fontSize": "inherit",
                                                    "lineHeight": 1.4285714285714286,
                                                    "padding": 8,
                                                  }
                                                }
                                              >
                                                import React from 'react';
import { toastr } from 'react-redux-toastr';
                
const Simple = (props = {}) =&gt; {
  const { add } = props;

  return &lt;button 
          onClick={() =&gt;
            add('addToQueue', async ({ job }) =&gt; {
              const { id, name } = job;

              console.log('About to wait');
              console.log(id, name);
              await new Promise(resolve =&gt;
                setTimeout(() =&gt; {
                  console.log('Waited 5000ms');
                  toastr.success('Success', 'Well done for waiting.');
                  resolve();
                }, 5000)
              );
            })}
          type="button"&gt;
            Enqueue
          &lt;/button&gt;
};

export default Simple;
                                              </code>
                                            </span>
                                          </SyntaxHighlighter>
                                        </ReactAsyncHighlighter>
                                      </Code>
                                    </CodeBlock>
                                    <CopyBlock__Button
                                      copied={false}
                                      data-clipboard-text="import React from 'react';
import { toastr } from 'react-redux-toastr';
                
const Simple = (props = {}) => {
  const { add } = props;

  return <button 
          onClick={() =>
            add('addToQueue', async ({ job }) => {
              const { id, name } = job;

              console.log('About to wait');
              console.log(id, name);
              await new Promise(resolve =>
                setTimeout(() => {
                  console.log('Waited 5000ms');
                  toastr.success('Success', 'Well done for waiting.');
                  resolve();
                }, 5000)
              );
            })}
          type=\\"button\\">
            Enqueue
          </button>
};

export default Simple;"
                                      disabled={false}
                                      id="copy_1"
                                      theme={
                                        Object {
                                          "additionColor": "#e6e1dc",
                                          "attributeColor": "#cda869",
                                          "backgroundColor": "#232323",
                                          "builtInColor": "#6d9cbe",
                                          "bulletColor": "#6d9cbe",
                                          "codeColor": "#e6e1dc",
                                          "commentColor": "#bc9458",
                                          "deletionColor": "#e6e1dc",
                                          "docTagColor": "#e6e1dc",
                                          "functionColor": "#e6e1dc",
                                          "keywordColor": "#c26230",
                                          "lineNumberBgColor": "#232323",
                                          "lineNumberColor": "#e6e1dc",
                                          "linkColor": "#6d9cbe",
                                          "literalColor": "#e6e1dc",
                                          "metaColor": "#9b859d",
                                          "metaKeywordColor": "#e6e1dc",
                                          "nameColor": "#e8bf6a",
                                          "numberColor": "#a5c261",
                                          "quoteColor": "#bc9458",
                                          "regexpColor": "#a5c261",
                                          "sectionColor": "#ffc66d",
                                          "selectorAttributeColor": "#c26230",
                                          "selectorClassColor": "#9b703f",
                                          "selectorIdColor": "#8b98ab",
                                          "stringColor": "#a5c261",
                                          "substringColor": "#519f50",
                                          "symbolColor": "#6d9cbe",
                                          "templateTagColor": "#e6e1dc",
                                          "templateVariableColor": "#a5c261",
                                          "textColor": "#e6e1dc",
                                          "titleColor": "#ffc66d",
                                          "typeColor": "#da4939",
                                          "variableColor": "#a5c261",
                                        }
                                      }
                                    >
                                      <StyledComponent
                                        copied={false}
                                        data-clipboard-text="import React from 'react';
import { toastr } from 'react-redux-toastr';
                
const Simple = (props = {}) => {
  const { add } = props;

  return <button 
          onClick={() =>
            add('addToQueue', async ({ job }) => {
              const { id, name } = job;

              console.log('About to wait');
              console.log(id, name);
              await new Promise(resolve =>
                setTimeout(() => {
                  console.log('Waited 5000ms');
                  toastr.success('Success', 'Well done for waiting.');
                  resolve();
                }, 5000)
              );
            })}
          type=\\"button\\">
            Enqueue
          </button>
};

export default Simple;"
                                        disabled={false}
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "CopyBlock__Button-sc-109lwr7-0",
                                              "isStatic": false,
                                              "lastClassName": "kMLoBg",
                                              "rules": Array [
                                                "position:absolute;top:0;right:0;margin-right:0.25rem;display:flex;flex-wrap:wrap;justify-content:center;align-items:center;background:",
                                                [Function],
                                                ";margin-top:0.15rem;border-radius:0.25rem;max-height:2rem;max-width:2rem;padding:0.5rem;&:hover{opacity:",
                                                [Function],
                                                ";}&:focus{outline:none;opacity:1;}.icon{width:1rem;height:1rem;}",
                                              ],
                                            },
                                            "displayName": "CopyBlock__Button",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "CopyBlock__Button-sc-109lwr7-0",
                                            "target": "button",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        id="copy_1"
                                        theme={
                                          Object {
                                            "additionColor": "#e6e1dc",
                                            "attributeColor": "#cda869",
                                            "backgroundColor": "#232323",
                                            "builtInColor": "#6d9cbe",
                                            "bulletColor": "#6d9cbe",
                                            "codeColor": "#e6e1dc",
                                            "commentColor": "#bc9458",
                                            "deletionColor": "#e6e1dc",
                                            "docTagColor": "#e6e1dc",
                                            "functionColor": "#e6e1dc",
                                            "keywordColor": "#c26230",
                                            "lineNumberBgColor": "#232323",
                                            "lineNumberColor": "#e6e1dc",
                                            "linkColor": "#6d9cbe",
                                            "literalColor": "#e6e1dc",
                                            "metaColor": "#9b859d",
                                            "metaKeywordColor": "#e6e1dc",
                                            "nameColor": "#e8bf6a",
                                            "numberColor": "#a5c261",
                                            "quoteColor": "#bc9458",
                                            "regexpColor": "#a5c261",
                                            "sectionColor": "#ffc66d",
                                            "selectorAttributeColor": "#c26230",
                                            "selectorClassColor": "#9b703f",
                                            "selectorIdColor": "#8b98ab",
                                            "stringColor": "#a5c261",
                                            "substringColor": "#519f50",
                                            "symbolColor": "#6d9cbe",
                                            "templateTagColor": "#e6e1dc",
                                            "templateVariableColor": "#a5c261",
                                            "textColor": "#e6e1dc",
                                            "titleColor": "#ffc66d",
                                            "typeColor": "#da4939",
                                            "variableColor": "#a5c261",
                                          }
                                        }
                                      >
                                        <button
                                          className="CopyBlock__Button-sc-109lwr7-0 kMLoBg"
                                          data-clipboard-text="import React from 'react';
import { toastr } from 'react-redux-toastr';
                
const Simple = (props = {}) => {
  const { add } = props;

  return <button 
          onClick={() =>
            add('addToQueue', async ({ job }) => {
              const { id, name } = job;

              console.log('About to wait');
              console.log(id, name);
              await new Promise(resolve =>
                setTimeout(() => {
                  console.log('Waited 5000ms');
                  toastr.success('Success', 'Well done for waiting.');
                  resolve();
                }, 5000)
              );
            })}
          type=\\"button\\">
            Enqueue
          </button>
};

export default Simple;"
                                          disabled={false}
                                          id="copy_1"
                                        >
                                          <_default
                                            className="icon"
                                            color="#e6e1dc"
                                            copied={false}
                                          >
                                            <ClipboardListIcon
                                              className="icon"
                                              color="#e6e1dc"
                                              size={24}
                                            >
                                              <svg
                                                className="icon"
                                                fill="#e6e1dc"
                                                height={24}
                                                viewBox="0 0 384 512"
                                                width={24}
                                              >
                                                <path
                                                  d="M280 240H168c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8h112c4.4 0 8-3.6 8-8v-16c0-4.4-3.6-8-8-8zm0 96H168c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8h112c4.4 0 8-3.6 8-8v-16c0-4.4-3.6-8-8-8zM112 232c-13.3 0-24 10.7-24 24s10.7 24 24 24 24-10.7 24-24-10.7-24-24-24zm0 96c-13.3 0-24 10.7-24 24s10.7 24 24 24 24-10.7 24-24-10.7-24-24-24zM336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 48c8.8 0 16 7.2 16 16s-7.2 16-16 16-16-7.2-16-16 7.2-16 16-16zm144 408c0 4.4-3.6 8-8 8H56c-4.4 0-8-3.6-8-8V120c0-4.4 3.6-8 8-8h40v32c0 8.8 7.2 16 16 16h160c8.8 0 16-7.2 16-16v-32h40c4.4 0 8 3.6 8 8v336z"
                                                />
                                              </svg>
                                            </ClipboardListIcon>
                                          </_default>
                                        </button>
                                      </StyledComponent>
                                    </CopyBlock__Button>
                                  </div>
                                </StyledComponent>
                              </CopyBlock__Snippet>
                            </_default>
                          </WithTheme(_default)>
                        </ThemeProvider>
                      </_default>
                    </div>
                    <hr
                      className="my-4"
                    />
                    <div
                      className="card-body"
                    >
                      <h2
                        className="card-title display-4"
                      >
                        FIFO FIFO, 
                        It's
                         Off To Work We Go
                      </h2>
                      <p
                        className="card-text"
                      >
                        While you can use Reducks as a synchronous queue dispatcher,
                         it's
                         true purpose is to provide a strict First In, First Out (FIFO) so the execution order is consistentl and predictable.
                      </p>
                      <p
                        className="card-text"
                      >
                        Click below to add 5 promisified timeout jobs and watch them execute in order.
                      </p>
                      <button
                        className="btn btn-dark"
                        onClick={[Function]}
                      >
                        Enqueue
                      </button>
                      <hr
                        className="my-4"
                      />
                      <_default
                        codeBlock={true}
                        language="jsx"
                        showLineNumbers="true"
                        text="import React from 'react';
import { toastr } from 'react-redux-toastr';
                
const Fifo = (props = {}) => {
  const { add } = props;

  return <button 
          onClick={() => {
            const array = ['First', 'Second', 'Third', 'Fourth', 'Fifth'];

            array.map(item => {
              return add('pushJob', async () => {
                await new Promise(resolve =>
                  setTimeout(() => {
                    toastr.success(\`Job The \${item}\`, 'Hi there!');
                    resolve();
                  }, 1000)
                );
              });
            });
          }}
          type=\\"button\\">
            Enqueue
          </button>
};

export default Fifo;"
                        theme={
                          Object {
                            "additionColor": "#e6e1dc",
                            "attributeColor": "#cda869",
                            "backgroundColor": "#232323",
                            "builtInColor": "#6d9cbe",
                            "bulletColor": "#6d9cbe",
                            "codeColor": "#e6e1dc",
                            "commentColor": "#bc9458",
                            "deletionColor": "#e6e1dc",
                            "docTagColor": "#e6e1dc",
                            "functionColor": "#e6e1dc",
                            "keywordColor": "#c26230",
                            "lineNumberBgColor": "#232323",
                            "lineNumberColor": "#e6e1dc",
                            "linkColor": "#6d9cbe",
                            "literalColor": "#e6e1dc",
                            "metaColor": "#9b859d",
                            "metaKeywordColor": "#e6e1dc",
                            "nameColor": "#e8bf6a",
                            "numberColor": "#a5c261",
                            "quoteColor": "#bc9458",
                            "regexpColor": "#a5c261",
                            "sectionColor": "#ffc66d",
                            "selectorAttributeColor": "#c26230",
                            "selectorClassColor": "#9b703f",
                            "selectorIdColor": "#8b98ab",
                            "stringColor": "#a5c261",
                            "substringColor": "#519f50",
                            "symbolColor": "#6d9cbe",
                            "templateTagColor": "#e6e1dc",
                            "templateVariableColor": "#a5c261",
                            "textColor": "#e6e1dc",
                            "titleColor": "#ffc66d",
                            "typeColor": "#da4939",
                            "variableColor": "#a5c261",
                          }
                        }
                        wrapLines={true}
                      >
                        <ThemeProvider
                          theme={Object {}}
                        >
                          <WithTheme(_default)
                            codeBlock={true}
                            language="jsx"
                            showLineNumbers="true"
                            text="import React from 'react';
import { toastr } from 'react-redux-toastr';
                
const Fifo = (props = {}) => {
  const { add } = props;

  return <button 
          onClick={() => {
            const array = ['First', 'Second', 'Third', 'Fourth', 'Fifth'];

            array.map(item => {
              return add('pushJob', async () => {
                await new Promise(resolve =>
                  setTimeout(() => {
                    toastr.success(\`Job The \${item}\`, 'Hi there!');
                    resolve();
                  }, 1000)
                );
              });
            });
          }}
          type=\\"button\\">
            Enqueue
          </button>
};

export default Fifo;"
                            theme={
                              Object {
                                "additionColor": "#e6e1dc",
                                "attributeColor": "#cda869",
                                "backgroundColor": "#232323",
                                "builtInColor": "#6d9cbe",
                                "bulletColor": "#6d9cbe",
                                "codeColor": "#e6e1dc",
                                "commentColor": "#bc9458",
                                "deletionColor": "#e6e1dc",
                                "docTagColor": "#e6e1dc",
                                "functionColor": "#e6e1dc",
                                "keywordColor": "#c26230",
                                "lineNumberBgColor": "#232323",
                                "lineNumberColor": "#e6e1dc",
                                "linkColor": "#6d9cbe",
                                "literalColor": "#e6e1dc",
                                "metaColor": "#9b859d",
                                "metaKeywordColor": "#e6e1dc",
                                "nameColor": "#e8bf6a",
                                "numberColor": "#a5c261",
                                "quoteColor": "#bc9458",
                                "regexpColor": "#a5c261",
                                "sectionColor": "#ffc66d",
                                "selectorAttributeColor": "#c26230",
                                "selectorClassColor": "#9b703f",
                                "selectorIdColor": "#8b98ab",
                                "stringColor": "#a5c261",
                                "substringColor": "#519f50",
                                "symbolColor": "#6d9cbe",
                                "templateTagColor": "#e6e1dc",
                                "templateVariableColor": "#a5c261",
                                "textColor": "#e6e1dc",
                                "titleColor": "#ffc66d",
                                "typeColor": "#da4939",
                                "variableColor": "#a5c261",
                              }
                            }
                            wrapLines={true}
                          >
                            <_default
                              codeBlock={true}
                              language="jsx"
                              showLineNumbers="true"
                              text="import React from 'react';
import { toastr } from 'react-redux-toastr';
                
const Fifo = (props = {}) => {
  const { add } = props;

  return <button 
          onClick={() => {
            const array = ['First', 'Second', 'Third', 'Fourth', 'Fifth'];

            array.map(item => {
              return add('pushJob', async () => {
                await new Promise(resolve =>
                  setTimeout(() => {
                    toastr.success(\`Job The \${item}\`, 'Hi there!');
                    resolve();
                  }, 1000)
                );
              });
            });
          }}
          type=\\"button\\">
            Enqueue
          </button>
};

export default Fifo;"
                              theme={
                                Object {
                                  "additionColor": "#e6e1dc",
                                  "attributeColor": "#cda869",
                                  "backgroundColor": "#232323",
                                  "builtInColor": "#6d9cbe",
                                  "bulletColor": "#6d9cbe",
                                  "codeColor": "#e6e1dc",
                                  "commentColor": "#bc9458",
                                  "deletionColor": "#e6e1dc",
                                  "docTagColor": "#e6e1dc",
                                  "functionColor": "#e6e1dc",
                                  "keywordColor": "#c26230",
                                  "lineNumberBgColor": "#232323",
                                  "lineNumberColor": "#e6e1dc",
                                  "linkColor": "#6d9cbe",
                                  "literalColor": "#e6e1dc",
                                  "metaColor": "#9b859d",
                                  "metaKeywordColor": "#e6e1dc",
                                  "nameColor": "#e8bf6a",
                                  "numberColor": "#a5c261",
                                  "quoteColor": "#bc9458",
                                  "regexpColor": "#a5c261",
                                  "sectionColor": "#ffc66d",
                                  "selectorAttributeColor": "#c26230",
                                  "selectorClassColor": "#9b703f",
                                  "selectorIdColor": "#8b98ab",
                                  "stringColor": "#a5c261",
                                  "substringColor": "#519f50",
                                  "symbolColor": "#6d9cbe",
                                  "templateTagColor": "#e6e1dc",
                                  "templateVariableColor": "#a5c261",
                                  "textColor": "#e6e1dc",
                                  "titleColor": "#ffc66d",
                                  "typeColor": "#da4939",
                                  "variableColor": "#a5c261",
                                }
                              }
                              wrapLines={true}
                            >
                              <CopyBlock__Snippet
                                codeBlock={true}
                                theme={
                                  Object {
                                    "additionColor": "#e6e1dc",
                                    "attributeColor": "#cda869",
                                    "backgroundColor": "#232323",
                                    "builtInColor": "#6d9cbe",
                                    "bulletColor": "#6d9cbe",
                                    "codeColor": "#e6e1dc",
                                    "commentColor": "#bc9458",
                                    "deletionColor": "#e6e1dc",
                                    "docTagColor": "#e6e1dc",
                                    "functionColor": "#e6e1dc",
                                    "keywordColor": "#c26230",
                                    "lineNumberBgColor": "#232323",
                                    "lineNumberColor": "#e6e1dc",
                                    "linkColor": "#6d9cbe",
                                    "literalColor": "#e6e1dc",
                                    "metaColor": "#9b859d",
                                    "metaKeywordColor": "#e6e1dc",
                                    "nameColor": "#e8bf6a",
                                    "numberColor": "#a5c261",
                                    "quoteColor": "#bc9458",
                                    "regexpColor": "#a5c261",
                                    "sectionColor": "#ffc66d",
                                    "selectorAttributeColor": "#c26230",
                                    "selectorClassColor": "#9b703f",
                                    "selectorIdColor": "#8b98ab",
                                    "stringColor": "#a5c261",
                                    "substringColor": "#519f50",
                                    "symbolColor": "#6d9cbe",
                                    "templateTagColor": "#e6e1dc",
                                    "templateVariableColor": "#a5c261",
                                    "textColor": "#e6e1dc",
                                    "titleColor": "#ffc66d",
                                    "typeColor": "#da4939",
                                    "variableColor": "#a5c261",
                                  }
                                }
                              >
                                <StyledComponent
                                  codeBlock={true}
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "CopyBlock__Snippet-sc-109lwr7-1",
                                        "isStatic": false,
                                        "lastClassName": "eUqWrH",
                                        "rules": Array [
                                          "display:flex;flex-wrap:wrap;position:relative;background:",
                                          [Function],
                                          ";border-radius:0.25rem;padding:",
                                          [Function],
                                          ";",
                                        ],
                                      },
                                      "displayName": "CopyBlock__Snippet",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "CopyBlock__Snippet-sc-109lwr7-1",
                                      "target": "div",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  theme={
                                    Object {
                                      "additionColor": "#e6e1dc",
                                      "attributeColor": "#cda869",
                                      "backgroundColor": "#232323",
                                      "builtInColor": "#6d9cbe",
                                      "bulletColor": "#6d9cbe",
                                      "codeColor": "#e6e1dc",
                                      "commentColor": "#bc9458",
                                      "deletionColor": "#e6e1dc",
                                      "docTagColor": "#e6e1dc",
                                      "functionColor": "#e6e1dc",
                                      "keywordColor": "#c26230",
                                      "lineNumberBgColor": "#232323",
                                      "lineNumberColor": "#e6e1dc",
                                      "linkColor": "#6d9cbe",
                                      "literalColor": "#e6e1dc",
                                      "metaColor": "#9b859d",
                                      "metaKeywordColor": "#e6e1dc",
                                      "nameColor": "#e8bf6a",
                                      "numberColor": "#a5c261",
                                      "quoteColor": "#bc9458",
                                      "regexpColor": "#a5c261",
                                      "sectionColor": "#ffc66d",
                                      "selectorAttributeColor": "#c26230",
                                      "selectorClassColor": "#9b703f",
                                      "selectorIdColor": "#8b98ab",
                                      "stringColor": "#a5c261",
                                      "substringColor": "#519f50",
                                      "symbolColor": "#6d9cbe",
                                      "templateTagColor": "#e6e1dc",
                                      "templateVariableColor": "#a5c261",
                                      "textColor": "#e6e1dc",
                                      "titleColor": "#ffc66d",
                                      "typeColor": "#da4939",
                                      "variableColor": "#a5c261",
                                    }
                                  }
                                >
                                  <div
                                    className="CopyBlock__Snippet-sc-109lwr7-1 eUqWrH"
                                  >
                                    <CodeBlock
                                      codeBlockStyle={Object {}}
                                      codeStyle={Object {}}
                                      highlight=""
                                      language="jsx"
                                      showLineNumbers="true"
                                      text="import React from 'react';
import { toastr } from 'react-redux-toastr';
                
const Fifo = (props = {}) => {
  const { add } = props;

  return <button 
          onClick={() => {
            const array = ['First', 'Second', 'Third', 'Fourth', 'Fifth'];

            array.map(item => {
              return add('pushJob', async () => {
                await new Promise(resolve =>
                  setTimeout(() => {
                    toastr.success(\`Job The \${item}\`, 'Hi there!');
                    resolve();
                  }, 1000)
                );
              });
            });
          }}
          type=\\"button\\">
            Enqueue
          </button>
};

export default Fifo;"
                                      theme={
                                        Object {
                                          "additionColor": "#e6e1dc",
                                          "attributeColor": "#cda869",
                                          "backgroundColor": "#232323",
                                          "builtInColor": "#6d9cbe",
                                          "bulletColor": "#6d9cbe",
                                          "codeColor": "#e6e1dc",
                                          "commentColor": "#bc9458",
                                          "deletionColor": "#e6e1dc",
                                          "docTagColor": "#e6e1dc",
                                          "functionColor": "#e6e1dc",
                                          "keywordColor": "#c26230",
                                          "lineNumberBgColor": "#232323",
                                          "lineNumberColor": "#e6e1dc",
                                          "linkColor": "#6d9cbe",
                                          "literalColor": "#e6e1dc",
                                          "metaColor": "#9b859d",
                                          "metaKeywordColor": "#e6e1dc",
                                          "nameColor": "#e8bf6a",
                                          "numberColor": "#a5c261",
                                          "quoteColor": "#bc9458",
                                          "regexpColor": "#a5c261",
                                          "sectionColor": "#ffc66d",
                                          "selectorAttributeColor": "#c26230",
                                          "selectorClassColor": "#9b703f",
                                          "selectorIdColor": "#8b98ab",
                                          "stringColor": "#a5c261",
                                          "substringColor": "#519f50",
                                          "symbolColor": "#6d9cbe",
                                          "templateTagColor": "#e6e1dc",
                                          "templateVariableColor": "#a5c261",
                                          "textColor": "#e6e1dc",
                                          "titleColor": "#ffc66d",
                                          "typeColor": "#da4939",
                                          "variableColor": "#a5c261",
                                        }
                                      }
                                      wrapLines={true}
                                    >
                                      <Code
                                        codeStyle={
                                          Object {
                                            "addition": Object {
                                              "color": "#e6e1dc",
                                            },
                                            "attr-name": Object {
                                              "color": "#cda869",
                                            },
                                            "block-comment": Object {
                                              "color": "#bc9458",
                                              "fontFamily": "inherit",
                                              "fontStyle": "italic",
                                            },
                                            "bold": Object {
                                              "fontWeight": "bolder",
                                            },
                                            "builtin": Object {
                                              "color": "#6d9cbe",
                                            },
                                            "bullet": Object {
                                              "color": "#6d9cbe",
                                            },
                                            "class-name": Object {
                                              "color": "#ffc66d",
                                            },
                                            "code": Object {
                                              "color": "#e6e1dc",
                                            },
                                            "comment": Object {
                                              "color": "#bc9458",
                                              "fontFamily": "inherit",
                                              "fontStyle": "italic",
                                            },
                                            "deletion": Object {
                                              "color": "#e6e1dc",
                                            },
                                            "doctype": Object {
                                              "color": "#e6e1dc",
                                            },
                                            "entity": Object {
                                              "color": "#e6e1dc",
                                            },
                                            "function": Object {
                                              "color": "#e6e1dc",
                                            },
                                            "function-name": Object {
                                              "color": "#ffc66d",
                                            },
                                            "italic": Object {
                                              "fontStyle": "italic",
                                            },
                                            "key": Object {
                                              "color": "#c26230",
                                              "fontWeight": "bolder",
                                            },
                                            "keyword": Object {
                                              "color": "#c26230",
                                              "fontWeight": "bolder",
                                            },
                                            "meta": Object {
                                              "color": "#9b859d",
                                            },
                                            "meta-keyword": Object {
                                              "color": "#e6e1dc",
                                            },
                                            "namespace": Object {
                                              "color": "#e8bf6a",
                                            },
                                            "number": Object {
                                              "color": "#a5c261",
                                            },
                                            "pre[class*=\\"language-\\"]": Object {
                                              "background": "#232323",
                                              "borderRadius": 3,
                                              "color": "#e6e1dc",
                                              "display": "flex",
                                              "fontFamily": "inherit",
                                              "fontSize": "inherit",
                                              "lineHeight": 1.4285714285714286,
                                              "overflowX": "auto",
                                              "whiteSpace": "pre",
                                            },
                                            "quote": Object {
                                              "color": "#bc9458",
                                            },
                                            "regex": Object {
                                              "color": "#a5c261",
                                            },
                                            "section": Object {
                                              "color": "#ffc66d",
                                            },
                                            "selector": Object {
                                              "color": undefined,
                                            },
                                            "selector-attr": Object {
                                              "color": "#c26230",
                                            },
                                            "selector-pseudo": Object {
                                              "color": undefined,
                                            },
                                            "string": Object {
                                              "color": "#a5c261",
                                            },
                                            "substr": Object {
                                              "color": "#519f50",
                                            },
                                            "symbol": Object {
                                              "color": "#6d9cbe",
                                            },
                                            "tag": Object {
                                              "color": "#e6e1dc",
                                            },
                                            "title": Object {
                                              "color": "#ffc66d",
                                            },
                                            "type": Object {
                                              "color": "#da4939",
                                            },
                                            "url": Object {
                                              "color": "#6d9cbe",
                                            },
                                            "variable": Object {
                                              "color": "#a5c261",
                                            },
                                          }
                                        }
                                        codeTagProps={
                                          Object {
                                            "style": Object {
                                              "fontFamily": "inherit",
                                              "fontSize": "inherit",
                                              "lineHeight": 1.4285714285714286,
                                              "padding": 8,
                                            },
                                          }
                                        }
                                        highlight=""
                                        language="jsx"
                                        lineNumberContainerStyle={
                                          Object {
                                            "backgroundColor": "#232323",
                                            "color": "#e6e1dc",
                                            "flexShrink": 0,
                                            "fontSize": "inherit",
                                            "lineHeight": 1.4285714285714286,
                                            "padding": 8,
                                            "textAlign": "right",
                                            "userSelect": "none",
                                          }
                                        }
                                        preTag="span"
                                        showLineNumbers="true"
                                        text="import React from 'react';
import { toastr } from 'react-redux-toastr';
                
const Fifo = (props = {}) => {
  const { add } = props;

  return <button 
          onClick={() => {
            const array = ['First', 'Second', 'Third', 'Fourth', 'Fifth'];

            array.map(item => {
              return add('pushJob', async () => {
                await new Promise(resolve =>
                  setTimeout(() => {
                    toastr.success(\`Job The \${item}\`, 'Hi there!');
                    resolve();
                  }, 1000)
                );
              });
            });
          }}
          type=\\"button\\">
            Enqueue
          </button>
};

export default Fifo;"
                                        theme={Object {}}
                                      >
                                        <ReactAsyncHighlighter
                                          PreTag="span"
                                          codeTagProps={
                                            Object {
                                              "style": Object {
                                                "fontFamily": "inherit",
                                                "fontSize": "inherit",
                                                "lineHeight": 1.4285714285714286,
                                                "padding": 8,
                                              },
                                            }
                                          }
                                          language="jsx"
                                          lineNumberContainerStyle={
                                            Object {
                                              "backgroundColor": "#232323",
                                              "color": "#e6e1dc",
                                              "flexShrink": 0,
                                              "fontSize": "inherit",
                                              "lineHeight": 1.4285714285714286,
                                              "padding": 8,
                                              "textAlign": "right",
                                              "userSelect": "none",
                                            }
                                          }
                                          lineNumberStyle={[Function]}
                                          lineProps={[Function]}
                                          showLineNumbers="true"
                                          style={
                                            Object {
                                              "addition": Object {
                                                "color": "#e6e1dc",
                                              },
                                              "attr-name": Object {
                                                "color": "#cda869",
                                              },
                                              "block-comment": Object {
                                                "color": "#bc9458",
                                                "fontFamily": "inherit",
                                                "fontStyle": "italic",
                                              },
                                              "bold": Object {
                                                "fontWeight": "bolder",
                                              },
                                              "builtin": Object {
                                                "color": "#6d9cbe",
                                              },
                                              "bullet": Object {
                                                "color": "#6d9cbe",
                                              },
                                              "class-name": Object {
                                                "color": "#ffc66d",
                                              },
                                              "code": Object {
                                                "color": "#e6e1dc",
                                              },
                                              "comment": Object {
                                                "color": "#bc9458",
                                                "fontFamily": "inherit",
                                                "fontStyle": "italic",
                                              },
                                              "deletion": Object {
                                                "color": "#e6e1dc",
                                              },
                                              "doctype": Object {
                                                "color": "#e6e1dc",
                                              },
                                              "entity": Object {
                                                "color": "#e6e1dc",
                                              },
                                              "function": Object {
                                                "color": "#e6e1dc",
                                              },
                                              "function-name": Object {
                                                "color": "#ffc66d",
                                              },
                                              "italic": Object {
                                                "fontStyle": "italic",
                                              },
                                              "key": Object {
                                                "color": "#c26230",
                                                "fontWeight": "bolder",
                                              },
                                              "keyword": Object {
                                                "color": "#c26230",
                                                "fontWeight": "bolder",
                                              },
                                              "meta": Object {
                                                "color": "#9b859d",
                                              },
                                              "meta-keyword": Object {
                                                "color": "#e6e1dc",
                                              },
                                              "namespace": Object {
                                                "color": "#e8bf6a",
                                              },
                                              "number": Object {
                                                "color": "#a5c261",
                                              },
                                              "pre[class*=\\"language-\\"]": Object {
                                                "background": "#232323",
                                                "borderRadius": 3,
                                                "color": "#e6e1dc",
                                                "display": "flex",
                                                "fontFamily": "inherit",
                                                "fontSize": "inherit",
                                                "lineHeight": 1.4285714285714286,
                                                "overflowX": "auto",
                                                "whiteSpace": "pre",
                                              },
                                              "quote": Object {
                                                "color": "#bc9458",
                                              },
                                              "regex": Object {
                                                "color": "#a5c261",
                                              },
                                              "section": Object {
                                                "color": "#ffc66d",
                                              },
                                              "selector": Object {
                                                "color": undefined,
                                              },
                                              "selector-attr": Object {
                                                "color": "#c26230",
                                              },
                                              "selector-pseudo": Object {
                                                "color": undefined,
                                              },
                                              "string": Object {
                                                "color": "#a5c261",
                                              },
                                              "substr": Object {
                                                "color": "#519f50",
                                              },
                                              "symbol": Object {
                                                "color": "#6d9cbe",
                                              },
                                              "tag": Object {
                                                "color": "#e6e1dc",
                                              },
                                              "title": Object {
                                                "color": "#ffc66d",
                                              },
                                              "type": Object {
                                                "color": "#da4939",
                                              },
                                              "url": Object {
                                                "color": "#6d9cbe",
                                              },
                                              "variable": Object {
                                                "color": "#a5c261",
                                              },
                                            }
                                          }
                                          wrapLines={false}
                                        >
                                          <SyntaxHighlighter
                                            PreTag="span"
                                            astGenerator={null}
                                            codeTagProps={
                                              Object {
                                                "style": Object {
                                                  "fontFamily": "inherit",
                                                  "fontSize": "inherit",
                                                  "lineHeight": 1.4285714285714286,
                                                  "padding": 8,
                                                },
                                              }
                                            }
                                            language="jsx"
                                            lineNumberContainerStyle={
                                              Object {
                                                "backgroundColor": "#232323",
                                                "color": "#e6e1dc",
                                                "flexShrink": 0,
                                                "fontSize": "inherit",
                                                "lineHeight": 1.4285714285714286,
                                                "padding": 8,
                                                "textAlign": "right",
                                                "userSelect": "none",
                                              }
                                            }
                                            lineNumberStyle={[Function]}
                                            lineProps={[Function]}
                                            showLineNumbers="true"
                                            style={
                                              Object {
                                                "addition": Object {
                                                  "color": "#e6e1dc",
                                                },
                                                "attr-name": Object {
                                                  "color": "#cda869",
                                                },
                                                "block-comment": Object {
                                                  "color": "#bc9458",
                                                  "fontFamily": "inherit",
                                                  "fontStyle": "italic",
                                                },
                                                "bold": Object {
                                                  "fontWeight": "bolder",
                                                },
                                                "builtin": Object {
                                                  "color": "#6d9cbe",
                                                },
                                                "bullet": Object {
                                                  "color": "#6d9cbe",
                                                },
                                                "class-name": Object {
                                                  "color": "#ffc66d",
                                                },
                                                "code": Object {
                                                  "color": "#e6e1dc",
                                                },
                                                "comment": Object {
                                                  "color": "#bc9458",
                                                  "fontFamily": "inherit",
                                                  "fontStyle": "italic",
                                                },
                                                "deletion": Object {
                                                  "color": "#e6e1dc",
                                                },
                                                "doctype": Object {
                                                  "color": "#e6e1dc",
                                                },
                                                "entity": Object {
                                                  "color": "#e6e1dc",
                                                },
                                                "function": Object {
                                                  "color": "#e6e1dc",
                                                },
                                                "function-name": Object {
                                                  "color": "#ffc66d",
                                                },
                                                "italic": Object {
                                                  "fontStyle": "italic",
                                                },
                                                "key": Object {
                                                  "color": "#c26230",
                                                  "fontWeight": "bolder",
                                                },
                                                "keyword": Object {
                                                  "color": "#c26230",
                                                  "fontWeight": "bolder",
                                                },
                                                "meta": Object {
                                                  "color": "#9b859d",
                                                },
                                                "meta-keyword": Object {
                                                  "color": "#e6e1dc",
                                                },
                                                "namespace": Object {
                                                  "color": "#e8bf6a",
                                                },
                                                "number": Object {
                                                  "color": "#a5c261",
                                                },
                                                "pre[class*=\\"language-\\"]": Object {
                                                  "background": "#232323",
                                                  "borderRadius": 3,
                                                  "color": "#e6e1dc",
                                                  "display": "flex",
                                                  "fontFamily": "inherit",
                                                  "fontSize": "inherit",
                                                  "lineHeight": 1.4285714285714286,
                                                  "overflowX": "auto",
                                                  "whiteSpace": "pre",
                                                },
                                                "quote": Object {
                                                  "color": "#bc9458",
                                                },
                                                "regex": Object {
                                                  "color": "#a5c261",
                                                },
                                                "section": Object {
                                                  "color": "#ffc66d",
                                                },
                                                "selector": Object {
                                                  "color": undefined,
                                                },
                                                "selector-attr": Object {
                                                  "color": "#c26230",
                                                },
                                                "selector-pseudo": Object {
                                                  "color": undefined,
                                                },
                                                "string": Object {
                                                  "color": "#a5c261",
                                                },
                                                "substr": Object {
                                                  "color": "#519f50",
                                                },
                                                "symbol": Object {
                                                  "color": "#6d9cbe",
                                                },
                                                "tag": Object {
                                                  "color": "#e6e1dc",
                                                },
                                                "title": Object {
                                                  "color": "#ffc66d",
                                                },
                                                "type": Object {
                                                  "color": "#da4939",
                                                },
                                                "url": Object {
                                                  "color": "#6d9cbe",
                                                },
                                                "variable": Object {
                                                  "color": "#a5c261",
                                                },
                                              }
                                            }
                                            wrapLines={false}
                                          >
                                            <span
                                              style={
                                                Object {
                                                  "background": "#232323",
                                                  "borderRadius": 3,
                                                  "color": "#e6e1dc",
                                                  "display": "flex",
                                                  "fontFamily": "inherit",
                                                  "fontSize": "inherit",
                                                  "lineHeight": 1.4285714285714286,
                                                  "overflowX": "auto",
                                                  "whiteSpace": "pre",
                                                }
                                              }
                                            >
                                              <LineNumbers
                                                codeString="import React from 'react';
import { toastr } from 'react-redux-toastr';
                
const Fifo = (props = {}) => {
  const { add } = props;

  return <button 
          onClick={() => {
            const array = ['First', 'Second', 'Third', 'Fourth', 'Fifth'];

            array.map(item => {
              return add('pushJob', async () => {
                await new Promise(resolve =>
                  setTimeout(() => {
                    toastr.success(\`Job The \${item}\`, 'Hi there!');
                    resolve();
                  }, 1000)
                );
              });
            });
          }}
          type=\\"button\\">
            Enqueue
          </button>
};

export default Fifo;"
                                                codeStyle={
                                                  Object {
                                                    "fontFamily": "inherit",
                                                    "fontSize": "inherit",
                                                    "lineHeight": 1.4285714285714286,
                                                    "padding": 8,
                                                  }
                                                }
                                                containerStyle={
                                                  Object {
                                                    "backgroundColor": "#232323",
                                                    "color": "#e6e1dc",
                                                    "flexShrink": 0,
                                                    "fontSize": "inherit",
                                                    "lineHeight": 1.4285714285714286,
                                                    "padding": 8,
                                                    "textAlign": "right",
                                                    "userSelect": "none",
                                                  }
                                                }
                                                numberStyle={[Function]}
                                                startingLineNumber={1}
                                              >
                                                <code
                                                  style={
                                                    Object {
                                                      "backgroundColor": "#232323",
                                                      "color": "#e6e1dc",
                                                      "flexShrink": 0,
                                                      "fontFamily": "inherit",
                                                      "fontSize": "inherit",
                                                      "lineHeight": 1.4285714285714286,
                                                      "padding": 8,
                                                      "textAlign": "right",
                                                      "userSelect": "none",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-0"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    1

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-1"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    2

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-2"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    3

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-3"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    4

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-4"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    5

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-5"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    6

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-6"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    7

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-7"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    8

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-8"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    9

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-9"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    10

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-10"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    11

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-11"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    12

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-12"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    13

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-13"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    14

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-14"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    15

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-15"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    16

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-16"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    17

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-17"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    18

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-18"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    19

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-19"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    20

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-20"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    21

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-21"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    22

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-22"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    23

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-23"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    24

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-24"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    25

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-25"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    26

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-26"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    27

                                                  </span>
                                                </code>
                                              </LineNumbers>
                                              <code
                                                style={
                                                  Object {
                                                    "fontFamily": "inherit",
                                                    "fontSize": "inherit",
                                                    "lineHeight": 1.4285714285714286,
                                                    "padding": 8,
                                                  }
                                                }
                                              >
                                                import React from 'react';
import { toastr } from 'react-redux-toastr';
                
const Fifo = (props = {}) =&gt; {
  const { add } = props;

  return &lt;button 
          onClick={() =&gt; {
            const array = ['First', 'Second', 'Third', 'Fourth', 'Fifth'];

            array.map(item =&gt; {
              return add('pushJob', async () =&gt; {
                await new Promise(resolve =&gt;
                  setTimeout(() =&gt; {
                    toastr.success(\`Job The \${item}\`, 'Hi there!');
                    resolve();
                  }, 1000)
                );
              });
            });
          }}
          type="button"&gt;
            Enqueue
          &lt;/button&gt;
};

export default Fifo;
                                              </code>
                                            </span>
                                          </SyntaxHighlighter>
                                        </ReactAsyncHighlighter>
                                      </Code>
                                    </CodeBlock>
                                    <CopyBlock__Button
                                      copied={false}
                                      data-clipboard-text="import React from 'react';
import { toastr } from 'react-redux-toastr';
                
const Fifo = (props = {}) => {
  const { add } = props;

  return <button 
          onClick={() => {
            const array = ['First', 'Second', 'Third', 'Fourth', 'Fifth'];

            array.map(item => {
              return add('pushJob', async () => {
                await new Promise(resolve =>
                  setTimeout(() => {
                    toastr.success(\`Job The \${item}\`, 'Hi there!');
                    resolve();
                  }, 1000)
                );
              });
            });
          }}
          type=\\"button\\">
            Enqueue
          </button>
};

export default Fifo;"
                                      disabled={false}
                                      id="copy_2"
                                      theme={
                                        Object {
                                          "additionColor": "#e6e1dc",
                                          "attributeColor": "#cda869",
                                          "backgroundColor": "#232323",
                                          "builtInColor": "#6d9cbe",
                                          "bulletColor": "#6d9cbe",
                                          "codeColor": "#e6e1dc",
                                          "commentColor": "#bc9458",
                                          "deletionColor": "#e6e1dc",
                                          "docTagColor": "#e6e1dc",
                                          "functionColor": "#e6e1dc",
                                          "keywordColor": "#c26230",
                                          "lineNumberBgColor": "#232323",
                                          "lineNumberColor": "#e6e1dc",
                                          "linkColor": "#6d9cbe",
                                          "literalColor": "#e6e1dc",
                                          "metaColor": "#9b859d",
                                          "metaKeywordColor": "#e6e1dc",
                                          "nameColor": "#e8bf6a",
                                          "numberColor": "#a5c261",
                                          "quoteColor": "#bc9458",
                                          "regexpColor": "#a5c261",
                                          "sectionColor": "#ffc66d",
                                          "selectorAttributeColor": "#c26230",
                                          "selectorClassColor": "#9b703f",
                                          "selectorIdColor": "#8b98ab",
                                          "stringColor": "#a5c261",
                                          "substringColor": "#519f50",
                                          "symbolColor": "#6d9cbe",
                                          "templateTagColor": "#e6e1dc",
                                          "templateVariableColor": "#a5c261",
                                          "textColor": "#e6e1dc",
                                          "titleColor": "#ffc66d",
                                          "typeColor": "#da4939",
                                          "variableColor": "#a5c261",
                                        }
                                      }
                                    >
                                      <StyledComponent
                                        copied={false}
                                        data-clipboard-text="import React from 'react';
import { toastr } from 'react-redux-toastr';
                
const Fifo = (props = {}) => {
  const { add } = props;

  return <button 
          onClick={() => {
            const array = ['First', 'Second', 'Third', 'Fourth', 'Fifth'];

            array.map(item => {
              return add('pushJob', async () => {
                await new Promise(resolve =>
                  setTimeout(() => {
                    toastr.success(\`Job The \${item}\`, 'Hi there!');
                    resolve();
                  }, 1000)
                );
              });
            });
          }}
          type=\\"button\\">
            Enqueue
          </button>
};

export default Fifo;"
                                        disabled={false}
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "CopyBlock__Button-sc-109lwr7-0",
                                              "isStatic": false,
                                              "lastClassName": "kMLoBg",
                                              "rules": Array [
                                                "position:absolute;top:0;right:0;margin-right:0.25rem;display:flex;flex-wrap:wrap;justify-content:center;align-items:center;background:",
                                                [Function],
                                                ";margin-top:0.15rem;border-radius:0.25rem;max-height:2rem;max-width:2rem;padding:0.5rem;&:hover{opacity:",
                                                [Function],
                                                ";}&:focus{outline:none;opacity:1;}.icon{width:1rem;height:1rem;}",
                                              ],
                                            },
                                            "displayName": "CopyBlock__Button",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "CopyBlock__Button-sc-109lwr7-0",
                                            "target": "button",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        id="copy_2"
                                        theme={
                                          Object {
                                            "additionColor": "#e6e1dc",
                                            "attributeColor": "#cda869",
                                            "backgroundColor": "#232323",
                                            "builtInColor": "#6d9cbe",
                                            "bulletColor": "#6d9cbe",
                                            "codeColor": "#e6e1dc",
                                            "commentColor": "#bc9458",
                                            "deletionColor": "#e6e1dc",
                                            "docTagColor": "#e6e1dc",
                                            "functionColor": "#e6e1dc",
                                            "keywordColor": "#c26230",
                                            "lineNumberBgColor": "#232323",
                                            "lineNumberColor": "#e6e1dc",
                                            "linkColor": "#6d9cbe",
                                            "literalColor": "#e6e1dc",
                                            "metaColor": "#9b859d",
                                            "metaKeywordColor": "#e6e1dc",
                                            "nameColor": "#e8bf6a",
                                            "numberColor": "#a5c261",
                                            "quoteColor": "#bc9458",
                                            "regexpColor": "#a5c261",
                                            "sectionColor": "#ffc66d",
                                            "selectorAttributeColor": "#c26230",
                                            "selectorClassColor": "#9b703f",
                                            "selectorIdColor": "#8b98ab",
                                            "stringColor": "#a5c261",
                                            "substringColor": "#519f50",
                                            "symbolColor": "#6d9cbe",
                                            "templateTagColor": "#e6e1dc",
                                            "templateVariableColor": "#a5c261",
                                            "textColor": "#e6e1dc",
                                            "titleColor": "#ffc66d",
                                            "typeColor": "#da4939",
                                            "variableColor": "#a5c261",
                                          }
                                        }
                                      >
                                        <button
                                          className="CopyBlock__Button-sc-109lwr7-0 kMLoBg"
                                          data-clipboard-text="import React from 'react';
import { toastr } from 'react-redux-toastr';
                
const Fifo = (props = {}) => {
  const { add } = props;

  return <button 
          onClick={() => {
            const array = ['First', 'Second', 'Third', 'Fourth', 'Fifth'];

            array.map(item => {
              return add('pushJob', async () => {
                await new Promise(resolve =>
                  setTimeout(() => {
                    toastr.success(\`Job The \${item}\`, 'Hi there!');
                    resolve();
                  }, 1000)
                );
              });
            });
          }}
          type=\\"button\\">
            Enqueue
          </button>
};

export default Fifo;"
                                          disabled={false}
                                          id="copy_2"
                                        >
                                          <_default
                                            className="icon"
                                            color="#e6e1dc"
                                            copied={false}
                                          >
                                            <ClipboardListIcon
                                              className="icon"
                                              color="#e6e1dc"
                                              size={24}
                                            >
                                              <svg
                                                className="icon"
                                                fill="#e6e1dc"
                                                height={24}
                                                viewBox="0 0 384 512"
                                                width={24}
                                              >
                                                <path
                                                  d="M280 240H168c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8h112c4.4 0 8-3.6 8-8v-16c0-4.4-3.6-8-8-8zm0 96H168c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8h112c4.4 0 8-3.6 8-8v-16c0-4.4-3.6-8-8-8zM112 232c-13.3 0-24 10.7-24 24s10.7 24 24 24 24-10.7 24-24-10.7-24-24-24zm0 96c-13.3 0-24 10.7-24 24s10.7 24 24 24 24-10.7 24-24-10.7-24-24-24zM336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 48c8.8 0 16 7.2 16 16s-7.2 16-16 16-16-7.2-16-16 7.2-16 16-16zm144 408c0 4.4-3.6 8-8 8H56c-4.4 0-8-3.6-8-8V120c0-4.4 3.6-8 8-8h40v32c0 8.8 7.2 16 16 16h160c8.8 0 16-7.2 16-16v-32h40c4.4 0 8 3.6 8 8v336z"
                                                />
                                              </svg>
                                            </ClipboardListIcon>
                                          </_default>
                                        </button>
                                      </StyledComponent>
                                    </CopyBlock__Button>
                                  </div>
                                </StyledComponent>
                              </CopyBlock__Snippet>
                            </_default>
                          </WithTheme(_default)>
                        </ThemeProvider>
                      </_default>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </Simple>
        </div>
        <div
          className="row"
        >
          <Advanced
            add={[Function]}
            reducks={
              Object {
                "jobs": Array [],
                "running": false,
              }
            }
            routing={
              Object {
                "locationBeforeTransitions": null,
              }
            }
            toastr={
              Object {
                "confirm": null,
                "toastrs": Array [],
              }
            }
          >
            <div
              className="container"
            >
              <div
                className="row"
              >
                <div
                  className="col-12"
                >
                  <div
                    className="card bg-secondary text-white"
                  >
                    <div
                      className="card-body"
                    >
                      <h2
                        className="card-title display-4"
                      >
                        Advanced
                      </h2>
                      <p
                        className="card-text"
                      >
                        Reducks can fire optional methods when a queue starts running and again when it finishes. This is useful for things like progress bars or notifications.
                      </p>
                      <button
                        className="btn btn-dark"
                        onClick={[Function]}
                      >
                        Enqueue
                      </button>
                      <hr
                        className="my-4"
                      />
                      <_default
                        codeBlock={true}
                        language="jsx"
                        showLineNumbers="true"
                        text="import { createStore, applyMiddleware, compose } from 'redux';
import thunk from 'redux-thunk';
import { createEpicMiddleware } from 'redux-observable';

import rootReducer, { rootEpic } from '../reducers/rootReducer';

const epicMiddleware = createEpicMiddleware();

export default function configureStore({ initialState = {} }) {
  const store = createStore(
    rootReducer,
    initialState,
    compose(
      applyMiddleware(thunk, epicMiddleware),
      window.navigator.userAgent.includes('Chrome') &&
        window.__REDUX_DEVTOOLS_EXTENSION__
        ? window.__REDUX_DEVTOOLS_EXTENSION__()
        : compose
    )
  );

  epicMiddleware.run((action$, state$) => {
    return rootEpic(action$, state$, {
      store,
      config: {
        onStart: () => {
          progress.start();
        },
        onFinish: () => {
          progress.end();
        }
      }
    });
  });

  return store;
}"
                        theme={
                          Object {
                            "additionColor": "#e6e1dc",
                            "attributeColor": "#cda869",
                            "backgroundColor": "#232323",
                            "builtInColor": "#6d9cbe",
                            "bulletColor": "#6d9cbe",
                            "codeColor": "#e6e1dc",
                            "commentColor": "#bc9458",
                            "deletionColor": "#e6e1dc",
                            "docTagColor": "#e6e1dc",
                            "functionColor": "#e6e1dc",
                            "keywordColor": "#c26230",
                            "lineNumberBgColor": "#232323",
                            "lineNumberColor": "#e6e1dc",
                            "linkColor": "#6d9cbe",
                            "literalColor": "#e6e1dc",
                            "metaColor": "#9b859d",
                            "metaKeywordColor": "#e6e1dc",
                            "nameColor": "#e8bf6a",
                            "numberColor": "#a5c261",
                            "quoteColor": "#bc9458",
                            "regexpColor": "#a5c261",
                            "sectionColor": "#ffc66d",
                            "selectorAttributeColor": "#c26230",
                            "selectorClassColor": "#9b703f",
                            "selectorIdColor": "#8b98ab",
                            "stringColor": "#a5c261",
                            "substringColor": "#519f50",
                            "symbolColor": "#6d9cbe",
                            "templateTagColor": "#e6e1dc",
                            "templateVariableColor": "#a5c261",
                            "textColor": "#e6e1dc",
                            "titleColor": "#ffc66d",
                            "typeColor": "#da4939",
                            "variableColor": "#a5c261",
                          }
                        }
                        wrapLines={true}
                      >
                        <ThemeProvider
                          theme={Object {}}
                        >
                          <WithTheme(_default)
                            codeBlock={true}
                            language="jsx"
                            showLineNumbers="true"
                            text="import { createStore, applyMiddleware, compose } from 'redux';
import thunk from 'redux-thunk';
import { createEpicMiddleware } from 'redux-observable';

import rootReducer, { rootEpic } from '../reducers/rootReducer';

const epicMiddleware = createEpicMiddleware();

export default function configureStore({ initialState = {} }) {
  const store = createStore(
    rootReducer,
    initialState,
    compose(
      applyMiddleware(thunk, epicMiddleware),
      window.navigator.userAgent.includes('Chrome') &&
        window.__REDUX_DEVTOOLS_EXTENSION__
        ? window.__REDUX_DEVTOOLS_EXTENSION__()
        : compose
    )
  );

  epicMiddleware.run((action$, state$) => {
    return rootEpic(action$, state$, {
      store,
      config: {
        onStart: () => {
          progress.start();
        },
        onFinish: () => {
          progress.end();
        }
      }
    });
  });

  return store;
}"
                            theme={
                              Object {
                                "additionColor": "#e6e1dc",
                                "attributeColor": "#cda869",
                                "backgroundColor": "#232323",
                                "builtInColor": "#6d9cbe",
                                "bulletColor": "#6d9cbe",
                                "codeColor": "#e6e1dc",
                                "commentColor": "#bc9458",
                                "deletionColor": "#e6e1dc",
                                "docTagColor": "#e6e1dc",
                                "functionColor": "#e6e1dc",
                                "keywordColor": "#c26230",
                                "lineNumberBgColor": "#232323",
                                "lineNumberColor": "#e6e1dc",
                                "linkColor": "#6d9cbe",
                                "literalColor": "#e6e1dc",
                                "metaColor": "#9b859d",
                                "metaKeywordColor": "#e6e1dc",
                                "nameColor": "#e8bf6a",
                                "numberColor": "#a5c261",
                                "quoteColor": "#bc9458",
                                "regexpColor": "#a5c261",
                                "sectionColor": "#ffc66d",
                                "selectorAttributeColor": "#c26230",
                                "selectorClassColor": "#9b703f",
                                "selectorIdColor": "#8b98ab",
                                "stringColor": "#a5c261",
                                "substringColor": "#519f50",
                                "symbolColor": "#6d9cbe",
                                "templateTagColor": "#e6e1dc",
                                "templateVariableColor": "#a5c261",
                                "textColor": "#e6e1dc",
                                "titleColor": "#ffc66d",
                                "typeColor": "#da4939",
                                "variableColor": "#a5c261",
                              }
                            }
                            wrapLines={true}
                          >
                            <_default
                              codeBlock={true}
                              language="jsx"
                              showLineNumbers="true"
                              text="import { createStore, applyMiddleware, compose } from 'redux';
import thunk from 'redux-thunk';
import { createEpicMiddleware } from 'redux-observable';

import rootReducer, { rootEpic } from '../reducers/rootReducer';

const epicMiddleware = createEpicMiddleware();

export default function configureStore({ initialState = {} }) {
  const store = createStore(
    rootReducer,
    initialState,
    compose(
      applyMiddleware(thunk, epicMiddleware),
      window.navigator.userAgent.includes('Chrome') &&
        window.__REDUX_DEVTOOLS_EXTENSION__
        ? window.__REDUX_DEVTOOLS_EXTENSION__()
        : compose
    )
  );

  epicMiddleware.run((action$, state$) => {
    return rootEpic(action$, state$, {
      store,
      config: {
        onStart: () => {
          progress.start();
        },
        onFinish: () => {
          progress.end();
        }
      }
    });
  });

  return store;
}"
                              theme={
                                Object {
                                  "additionColor": "#e6e1dc",
                                  "attributeColor": "#cda869",
                                  "backgroundColor": "#232323",
                                  "builtInColor": "#6d9cbe",
                                  "bulletColor": "#6d9cbe",
                                  "codeColor": "#e6e1dc",
                                  "commentColor": "#bc9458",
                                  "deletionColor": "#e6e1dc",
                                  "docTagColor": "#e6e1dc",
                                  "functionColor": "#e6e1dc",
                                  "keywordColor": "#c26230",
                                  "lineNumberBgColor": "#232323",
                                  "lineNumberColor": "#e6e1dc",
                                  "linkColor": "#6d9cbe",
                                  "literalColor": "#e6e1dc",
                                  "metaColor": "#9b859d",
                                  "metaKeywordColor": "#e6e1dc",
                                  "nameColor": "#e8bf6a",
                                  "numberColor": "#a5c261",
                                  "quoteColor": "#bc9458",
                                  "regexpColor": "#a5c261",
                                  "sectionColor": "#ffc66d",
                                  "selectorAttributeColor": "#c26230",
                                  "selectorClassColor": "#9b703f",
                                  "selectorIdColor": "#8b98ab",
                                  "stringColor": "#a5c261",
                                  "substringColor": "#519f50",
                                  "symbolColor": "#6d9cbe",
                                  "templateTagColor": "#e6e1dc",
                                  "templateVariableColor": "#a5c261",
                                  "textColor": "#e6e1dc",
                                  "titleColor": "#ffc66d",
                                  "typeColor": "#da4939",
                                  "variableColor": "#a5c261",
                                }
                              }
                              wrapLines={true}
                            >
                              <CopyBlock__Snippet
                                codeBlock={true}
                                theme={
                                  Object {
                                    "additionColor": "#e6e1dc",
                                    "attributeColor": "#cda869",
                                    "backgroundColor": "#232323",
                                    "builtInColor": "#6d9cbe",
                                    "bulletColor": "#6d9cbe",
                                    "codeColor": "#e6e1dc",
                                    "commentColor": "#bc9458",
                                    "deletionColor": "#e6e1dc",
                                    "docTagColor": "#e6e1dc",
                                    "functionColor": "#e6e1dc",
                                    "keywordColor": "#c26230",
                                    "lineNumberBgColor": "#232323",
                                    "lineNumberColor": "#e6e1dc",
                                    "linkColor": "#6d9cbe",
                                    "literalColor": "#e6e1dc",
                                    "metaColor": "#9b859d",
                                    "metaKeywordColor": "#e6e1dc",
                                    "nameColor": "#e8bf6a",
                                    "numberColor": "#a5c261",
                                    "quoteColor": "#bc9458",
                                    "regexpColor": "#a5c261",
                                    "sectionColor": "#ffc66d",
                                    "selectorAttributeColor": "#c26230",
                                    "selectorClassColor": "#9b703f",
                                    "selectorIdColor": "#8b98ab",
                                    "stringColor": "#a5c261",
                                    "substringColor": "#519f50",
                                    "symbolColor": "#6d9cbe",
                                    "templateTagColor": "#e6e1dc",
                                    "templateVariableColor": "#a5c261",
                                    "textColor": "#e6e1dc",
                                    "titleColor": "#ffc66d",
                                    "typeColor": "#da4939",
                                    "variableColor": "#a5c261",
                                  }
                                }
                              >
                                <StyledComponent
                                  codeBlock={true}
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "CopyBlock__Snippet-sc-109lwr7-1",
                                        "isStatic": false,
                                        "lastClassName": "eUqWrH",
                                        "rules": Array [
                                          "display:flex;flex-wrap:wrap;position:relative;background:",
                                          [Function],
                                          ";border-radius:0.25rem;padding:",
                                          [Function],
                                          ";",
                                        ],
                                      },
                                      "displayName": "CopyBlock__Snippet",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "CopyBlock__Snippet-sc-109lwr7-1",
                                      "target": "div",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  theme={
                                    Object {
                                      "additionColor": "#e6e1dc",
                                      "attributeColor": "#cda869",
                                      "backgroundColor": "#232323",
                                      "builtInColor": "#6d9cbe",
                                      "bulletColor": "#6d9cbe",
                                      "codeColor": "#e6e1dc",
                                      "commentColor": "#bc9458",
                                      "deletionColor": "#e6e1dc",
                                      "docTagColor": "#e6e1dc",
                                      "functionColor": "#e6e1dc",
                                      "keywordColor": "#c26230",
                                      "lineNumberBgColor": "#232323",
                                      "lineNumberColor": "#e6e1dc",
                                      "linkColor": "#6d9cbe",
                                      "literalColor": "#e6e1dc",
                                      "metaColor": "#9b859d",
                                      "metaKeywordColor": "#e6e1dc",
                                      "nameColor": "#e8bf6a",
                                      "numberColor": "#a5c261",
                                      "quoteColor": "#bc9458",
                                      "regexpColor": "#a5c261",
                                      "sectionColor": "#ffc66d",
                                      "selectorAttributeColor": "#c26230",
                                      "selectorClassColor": "#9b703f",
                                      "selectorIdColor": "#8b98ab",
                                      "stringColor": "#a5c261",
                                      "substringColor": "#519f50",
                                      "symbolColor": "#6d9cbe",
                                      "templateTagColor": "#e6e1dc",
                                      "templateVariableColor": "#a5c261",
                                      "textColor": "#e6e1dc",
                                      "titleColor": "#ffc66d",
                                      "typeColor": "#da4939",
                                      "variableColor": "#a5c261",
                                    }
                                  }
                                >
                                  <div
                                    className="CopyBlock__Snippet-sc-109lwr7-1 eUqWrH"
                                  >
                                    <CodeBlock
                                      codeBlockStyle={Object {}}
                                      codeStyle={Object {}}
                                      highlight=""
                                      language="jsx"
                                      showLineNumbers="true"
                                      text="import { createStore, applyMiddleware, compose } from 'redux';
import thunk from 'redux-thunk';
import { createEpicMiddleware } from 'redux-observable';

import rootReducer, { rootEpic } from '../reducers/rootReducer';

const epicMiddleware = createEpicMiddleware();

export default function configureStore({ initialState = {} }) {
  const store = createStore(
    rootReducer,
    initialState,
    compose(
      applyMiddleware(thunk, epicMiddleware),
      window.navigator.userAgent.includes('Chrome') &&
        window.__REDUX_DEVTOOLS_EXTENSION__
        ? window.__REDUX_DEVTOOLS_EXTENSION__()
        : compose
    )
  );

  epicMiddleware.run((action$, state$) => {
    return rootEpic(action$, state$, {
      store,
      config: {
        onStart: () => {
          progress.start();
        },
        onFinish: () => {
          progress.end();
        }
      }
    });
  });

  return store;
}"
                                      theme={
                                        Object {
                                          "additionColor": "#e6e1dc",
                                          "attributeColor": "#cda869",
                                          "backgroundColor": "#232323",
                                          "builtInColor": "#6d9cbe",
                                          "bulletColor": "#6d9cbe",
                                          "codeColor": "#e6e1dc",
                                          "commentColor": "#bc9458",
                                          "deletionColor": "#e6e1dc",
                                          "docTagColor": "#e6e1dc",
                                          "functionColor": "#e6e1dc",
                                          "keywordColor": "#c26230",
                                          "lineNumberBgColor": "#232323",
                                          "lineNumberColor": "#e6e1dc",
                                          "linkColor": "#6d9cbe",
                                          "literalColor": "#e6e1dc",
                                          "metaColor": "#9b859d",
                                          "metaKeywordColor": "#e6e1dc",
                                          "nameColor": "#e8bf6a",
                                          "numberColor": "#a5c261",
                                          "quoteColor": "#bc9458",
                                          "regexpColor": "#a5c261",
                                          "sectionColor": "#ffc66d",
                                          "selectorAttributeColor": "#c26230",
                                          "selectorClassColor": "#9b703f",
                                          "selectorIdColor": "#8b98ab",
                                          "stringColor": "#a5c261",
                                          "substringColor": "#519f50",
                                          "symbolColor": "#6d9cbe",
                                          "templateTagColor": "#e6e1dc",
                                          "templateVariableColor": "#a5c261",
                                          "textColor": "#e6e1dc",
                                          "titleColor": "#ffc66d",
                                          "typeColor": "#da4939",
                                          "variableColor": "#a5c261",
                                        }
                                      }
                                      wrapLines={true}
                                    >
                                      <Code
                                        codeStyle={
                                          Object {
                                            "addition": Object {
                                              "color": "#e6e1dc",
                                            },
                                            "attr-name": Object {
                                              "color": "#cda869",
                                            },
                                            "block-comment": Object {
                                              "color": "#bc9458",
                                              "fontFamily": "inherit",
                                              "fontStyle": "italic",
                                            },
                                            "bold": Object {
                                              "fontWeight": "bolder",
                                            },
                                            "builtin": Object {
                                              "color": "#6d9cbe",
                                            },
                                            "bullet": Object {
                                              "color": "#6d9cbe",
                                            },
                                            "class-name": Object {
                                              "color": "#ffc66d",
                                            },
                                            "code": Object {
                                              "color": "#e6e1dc",
                                            },
                                            "comment": Object {
                                              "color": "#bc9458",
                                              "fontFamily": "inherit",
                                              "fontStyle": "italic",
                                            },
                                            "deletion": Object {
                                              "color": "#e6e1dc",
                                            },
                                            "doctype": Object {
                                              "color": "#e6e1dc",
                                            },
                                            "entity": Object {
                                              "color": "#e6e1dc",
                                            },
                                            "function": Object {
                                              "color": "#e6e1dc",
                                            },
                                            "function-name": Object {
                                              "color": "#ffc66d",
                                            },
                                            "italic": Object {
                                              "fontStyle": "italic",
                                            },
                                            "key": Object {
                                              "color": "#c26230",
                                              "fontWeight": "bolder",
                                            },
                                            "keyword": Object {
                                              "color": "#c26230",
                                              "fontWeight": "bolder",
                                            },
                                            "meta": Object {
                                              "color": "#9b859d",
                                            },
                                            "meta-keyword": Object {
                                              "color": "#e6e1dc",
                                            },
                                            "namespace": Object {
                                              "color": "#e8bf6a",
                                            },
                                            "number": Object {
                                              "color": "#a5c261",
                                            },
                                            "pre[class*=\\"language-\\"]": Object {
                                              "background": "#232323",
                                              "borderRadius": 3,
                                              "color": "#e6e1dc",
                                              "display": "flex",
                                              "fontFamily": "inherit",
                                              "fontSize": "inherit",
                                              "lineHeight": 1.4285714285714286,
                                              "overflowX": "auto",
                                              "whiteSpace": "pre",
                                            },
                                            "quote": Object {
                                              "color": "#bc9458",
                                            },
                                            "regex": Object {
                                              "color": "#a5c261",
                                            },
                                            "section": Object {
                                              "color": "#ffc66d",
                                            },
                                            "selector": Object {
                                              "color": undefined,
                                            },
                                            "selector-attr": Object {
                                              "color": "#c26230",
                                            },
                                            "selector-pseudo": Object {
                                              "color": undefined,
                                            },
                                            "string": Object {
                                              "color": "#a5c261",
                                            },
                                            "substr": Object {
                                              "color": "#519f50",
                                            },
                                            "symbol": Object {
                                              "color": "#6d9cbe",
                                            },
                                            "tag": Object {
                                              "color": "#e6e1dc",
                                            },
                                            "title": Object {
                                              "color": "#ffc66d",
                                            },
                                            "type": Object {
                                              "color": "#da4939",
                                            },
                                            "url": Object {
                                              "color": "#6d9cbe",
                                            },
                                            "variable": Object {
                                              "color": "#a5c261",
                                            },
                                          }
                                        }
                                        codeTagProps={
                                          Object {
                                            "style": Object {
                                              "fontFamily": "inherit",
                                              "fontSize": "inherit",
                                              "lineHeight": 1.4285714285714286,
                                              "padding": 8,
                                            },
                                          }
                                        }
                                        highlight=""
                                        language="jsx"
                                        lineNumberContainerStyle={
                                          Object {
                                            "backgroundColor": "#232323",
                                            "color": "#e6e1dc",
                                            "flexShrink": 0,
                                            "fontSize": "inherit",
                                            "lineHeight": 1.4285714285714286,
                                            "padding": 8,
                                            "textAlign": "right",
                                            "userSelect": "none",
                                          }
                                        }
                                        preTag="span"
                                        showLineNumbers="true"
                                        text="import { createStore, applyMiddleware, compose } from 'redux';
import thunk from 'redux-thunk';
import { createEpicMiddleware } from 'redux-observable';

import rootReducer, { rootEpic } from '../reducers/rootReducer';

const epicMiddleware = createEpicMiddleware();

export default function configureStore({ initialState = {} }) {
  const store = createStore(
    rootReducer,
    initialState,
    compose(
      applyMiddleware(thunk, epicMiddleware),
      window.navigator.userAgent.includes('Chrome') &&
        window.__REDUX_DEVTOOLS_EXTENSION__
        ? window.__REDUX_DEVTOOLS_EXTENSION__()
        : compose
    )
  );

  epicMiddleware.run((action$, state$) => {
    return rootEpic(action$, state$, {
      store,
      config: {
        onStart: () => {
          progress.start();
        },
        onFinish: () => {
          progress.end();
        }
      }
    });
  });

  return store;
}"
                                        theme={Object {}}
                                      >
                                        <ReactAsyncHighlighter
                                          PreTag="span"
                                          codeTagProps={
                                            Object {
                                              "style": Object {
                                                "fontFamily": "inherit",
                                                "fontSize": "inherit",
                                                "lineHeight": 1.4285714285714286,
                                                "padding": 8,
                                              },
                                            }
                                          }
                                          language="jsx"
                                          lineNumberContainerStyle={
                                            Object {
                                              "backgroundColor": "#232323",
                                              "color": "#e6e1dc",
                                              "flexShrink": 0,
                                              "fontSize": "inherit",
                                              "lineHeight": 1.4285714285714286,
                                              "padding": 8,
                                              "textAlign": "right",
                                              "userSelect": "none",
                                            }
                                          }
                                          lineNumberStyle={[Function]}
                                          lineProps={[Function]}
                                          showLineNumbers="true"
                                          style={
                                            Object {
                                              "addition": Object {
                                                "color": "#e6e1dc",
                                              },
                                              "attr-name": Object {
                                                "color": "#cda869",
                                              },
                                              "block-comment": Object {
                                                "color": "#bc9458",
                                                "fontFamily": "inherit",
                                                "fontStyle": "italic",
                                              },
                                              "bold": Object {
                                                "fontWeight": "bolder",
                                              },
                                              "builtin": Object {
                                                "color": "#6d9cbe",
                                              },
                                              "bullet": Object {
                                                "color": "#6d9cbe",
                                              },
                                              "class-name": Object {
                                                "color": "#ffc66d",
                                              },
                                              "code": Object {
                                                "color": "#e6e1dc",
                                              },
                                              "comment": Object {
                                                "color": "#bc9458",
                                                "fontFamily": "inherit",
                                                "fontStyle": "italic",
                                              },
                                              "deletion": Object {
                                                "color": "#e6e1dc",
                                              },
                                              "doctype": Object {
                                                "color": "#e6e1dc",
                                              },
                                              "entity": Object {
                                                "color": "#e6e1dc",
                                              },
                                              "function": Object {
                                                "color": "#e6e1dc",
                                              },
                                              "function-name": Object {
                                                "color": "#ffc66d",
                                              },
                                              "italic": Object {
                                                "fontStyle": "italic",
                                              },
                                              "key": Object {
                                                "color": "#c26230",
                                                "fontWeight": "bolder",
                                              },
                                              "keyword": Object {
                                                "color": "#c26230",
                                                "fontWeight": "bolder",
                                              },
                                              "meta": Object {
                                                "color": "#9b859d",
                                              },
                                              "meta-keyword": Object {
                                                "color": "#e6e1dc",
                                              },
                                              "namespace": Object {
                                                "color": "#e8bf6a",
                                              },
                                              "number": Object {
                                                "color": "#a5c261",
                                              },
                                              "pre[class*=\\"language-\\"]": Object {
                                                "background": "#232323",
                                                "borderRadius": 3,
                                                "color": "#e6e1dc",
                                                "display": "flex",
                                                "fontFamily": "inherit",
                                                "fontSize": "inherit",
                                                "lineHeight": 1.4285714285714286,
                                                "overflowX": "auto",
                                                "whiteSpace": "pre",
                                              },
                                              "quote": Object {
                                                "color": "#bc9458",
                                              },
                                              "regex": Object {
                                                "color": "#a5c261",
                                              },
                                              "section": Object {
                                                "color": "#ffc66d",
                                              },
                                              "selector": Object {
                                                "color": undefined,
                                              },
                                              "selector-attr": Object {
                                                "color": "#c26230",
                                              },
                                              "selector-pseudo": Object {
                                                "color": undefined,
                                              },
                                              "string": Object {
                                                "color": "#a5c261",
                                              },
                                              "substr": Object {
                                                "color": "#519f50",
                                              },
                                              "symbol": Object {
                                                "color": "#6d9cbe",
                                              },
                                              "tag": Object {
                                                "color": "#e6e1dc",
                                              },
                                              "title": Object {
                                                "color": "#ffc66d",
                                              },
                                              "type": Object {
                                                "color": "#da4939",
                                              },
                                              "url": Object {
                                                "color": "#6d9cbe",
                                              },
                                              "variable": Object {
                                                "color": "#a5c261",
                                              },
                                            }
                                          }
                                          wrapLines={false}
                                        >
                                          <SyntaxHighlighter
                                            PreTag="span"
                                            astGenerator={null}
                                            codeTagProps={
                                              Object {
                                                "style": Object {
                                                  "fontFamily": "inherit",
                                                  "fontSize": "inherit",
                                                  "lineHeight": 1.4285714285714286,
                                                  "padding": 8,
                                                },
                                              }
                                            }
                                            language="jsx"
                                            lineNumberContainerStyle={
                                              Object {
                                                "backgroundColor": "#232323",
                                                "color": "#e6e1dc",
                                                "flexShrink": 0,
                                                "fontSize": "inherit",
                                                "lineHeight": 1.4285714285714286,
                                                "padding": 8,
                                                "textAlign": "right",
                                                "userSelect": "none",
                                              }
                                            }
                                            lineNumberStyle={[Function]}
                                            lineProps={[Function]}
                                            showLineNumbers="true"
                                            style={
                                              Object {
                                                "addition": Object {
                                                  "color": "#e6e1dc",
                                                },
                                                "attr-name": Object {
                                                  "color": "#cda869",
                                                },
                                                "block-comment": Object {
                                                  "color": "#bc9458",
                                                  "fontFamily": "inherit",
                                                  "fontStyle": "italic",
                                                },
                                                "bold": Object {
                                                  "fontWeight": "bolder",
                                                },
                                                "builtin": Object {
                                                  "color": "#6d9cbe",
                                                },
                                                "bullet": Object {
                                                  "color": "#6d9cbe",
                                                },
                                                "class-name": Object {
                                                  "color": "#ffc66d",
                                                },
                                                "code": Object {
                                                  "color": "#e6e1dc",
                                                },
                                                "comment": Object {
                                                  "color": "#bc9458",
                                                  "fontFamily": "inherit",
                                                  "fontStyle": "italic",
                                                },
                                                "deletion": Object {
                                                  "color": "#e6e1dc",
                                                },
                                                "doctype": Object {
                                                  "color": "#e6e1dc",
                                                },
                                                "entity": Object {
                                                  "color": "#e6e1dc",
                                                },
                                                "function": Object {
                                                  "color": "#e6e1dc",
                                                },
                                                "function-name": Object {
                                                  "color": "#ffc66d",
                                                },
                                                "italic": Object {
                                                  "fontStyle": "italic",
                                                },
                                                "key": Object {
                                                  "color": "#c26230",
                                                  "fontWeight": "bolder",
                                                },
                                                "keyword": Object {
                                                  "color": "#c26230",
                                                  "fontWeight": "bolder",
                                                },
                                                "meta": Object {
                                                  "color": "#9b859d",
                                                },
                                                "meta-keyword": Object {
                                                  "color": "#e6e1dc",
                                                },
                                                "namespace": Object {
                                                  "color": "#e8bf6a",
                                                },
                                                "number": Object {
                                                  "color": "#a5c261",
                                                },
                                                "pre[class*=\\"language-\\"]": Object {
                                                  "background": "#232323",
                                                  "borderRadius": 3,
                                                  "color": "#e6e1dc",
                                                  "display": "flex",
                                                  "fontFamily": "inherit",
                                                  "fontSize": "inherit",
                                                  "lineHeight": 1.4285714285714286,
                                                  "overflowX": "auto",
                                                  "whiteSpace": "pre",
                                                },
                                                "quote": Object {
                                                  "color": "#bc9458",
                                                },
                                                "regex": Object {
                                                  "color": "#a5c261",
                                                },
                                                "section": Object {
                                                  "color": "#ffc66d",
                                                },
                                                "selector": Object {
                                                  "color": undefined,
                                                },
                                                "selector-attr": Object {
                                                  "color": "#c26230",
                                                },
                                                "selector-pseudo": Object {
                                                  "color": undefined,
                                                },
                                                "string": Object {
                                                  "color": "#a5c261",
                                                },
                                                "substr": Object {
                                                  "color": "#519f50",
                                                },
                                                "symbol": Object {
                                                  "color": "#6d9cbe",
                                                },
                                                "tag": Object {
                                                  "color": "#e6e1dc",
                                                },
                                                "title": Object {
                                                  "color": "#ffc66d",
                                                },
                                                "type": Object {
                                                  "color": "#da4939",
                                                },
                                                "url": Object {
                                                  "color": "#6d9cbe",
                                                },
                                                "variable": Object {
                                                  "color": "#a5c261",
                                                },
                                              }
                                            }
                                            wrapLines={false}
                                          >
                                            <span
                                              style={
                                                Object {
                                                  "background": "#232323",
                                                  "borderRadius": 3,
                                                  "color": "#e6e1dc",
                                                  "display": "flex",
                                                  "fontFamily": "inherit",
                                                  "fontSize": "inherit",
                                                  "lineHeight": 1.4285714285714286,
                                                  "overflowX": "auto",
                                                  "whiteSpace": "pre",
                                                }
                                              }
                                            >
                                              <LineNumbers
                                                codeString="import { createStore, applyMiddleware, compose } from 'redux';
import thunk from 'redux-thunk';
import { createEpicMiddleware } from 'redux-observable';

import rootReducer, { rootEpic } from '../reducers/rootReducer';

const epicMiddleware = createEpicMiddleware();

export default function configureStore({ initialState = {} }) {
  const store = createStore(
    rootReducer,
    initialState,
    compose(
      applyMiddleware(thunk, epicMiddleware),
      window.navigator.userAgent.includes('Chrome') &&
        window.__REDUX_DEVTOOLS_EXTENSION__
        ? window.__REDUX_DEVTOOLS_EXTENSION__()
        : compose
    )
  );

  epicMiddleware.run((action$, state$) => {
    return rootEpic(action$, state$, {
      store,
      config: {
        onStart: () => {
          progress.start();
        },
        onFinish: () => {
          progress.end();
        }
      }
    });
  });

  return store;
}"
                                                codeStyle={
                                                  Object {
                                                    "fontFamily": "inherit",
                                                    "fontSize": "inherit",
                                                    "lineHeight": 1.4285714285714286,
                                                    "padding": 8,
                                                  }
                                                }
                                                containerStyle={
                                                  Object {
                                                    "backgroundColor": "#232323",
                                                    "color": "#e6e1dc",
                                                    "flexShrink": 0,
                                                    "fontSize": "inherit",
                                                    "lineHeight": 1.4285714285714286,
                                                    "padding": 8,
                                                    "textAlign": "right",
                                                    "userSelect": "none",
                                                  }
                                                }
                                                numberStyle={[Function]}
                                                startingLineNumber={1}
                                              >
                                                <code
                                                  style={
                                                    Object {
                                                      "backgroundColor": "#232323",
                                                      "color": "#e6e1dc",
                                                      "flexShrink": 0,
                                                      "fontFamily": "inherit",
                                                      "fontSize": "inherit",
                                                      "lineHeight": 1.4285714285714286,
                                                      "padding": 8,
                                                      "textAlign": "right",
                                                      "userSelect": "none",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-0"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    1

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-1"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    2

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-2"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    3

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-3"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    4

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-4"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    5

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-5"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    6

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-6"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    7

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-7"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    8

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-8"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    9

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-9"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    10

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-10"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    11

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-11"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    12

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-12"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    13

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-13"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    14

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-14"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    15

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-15"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    16

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-16"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    17

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-17"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    18

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-18"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    19

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-19"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    20

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-20"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    21

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-21"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    22

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-22"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    23

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-23"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    24

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-24"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    25

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-25"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    26

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-26"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    27

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-27"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    28

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-28"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    29

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-29"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    30

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-30"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    31

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-31"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    32

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-32"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    33

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-33"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    34

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-34"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    35

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-35"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    36

                                                  </span>
                                                  <span
                                                    className="react-syntax-highlighter-line-number"
                                                    key="line-36"
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                      }
                                                    }
                                                  >
                                                    37

                                                  </span>
                                                </code>
                                              </LineNumbers>
                                              <code
                                                style={
                                                  Object {
                                                    "fontFamily": "inherit",
                                                    "fontSize": "inherit",
                                                    "lineHeight": 1.4285714285714286,
                                                    "padding": 8,
                                                  }
                                                }
                                              >
                                                import { createStore, applyMiddleware, compose } from 'redux';
import thunk from 'redux-thunk';
import { createEpicMiddleware } from 'redux-observable';

import rootReducer, { rootEpic } from '../reducers/rootReducer';

const epicMiddleware = createEpicMiddleware();

export default function configureStore({ initialState = {} }) {
  const store = createStore(
    rootReducer,
    initialState,
    compose(
      applyMiddleware(thunk, epicMiddleware),
      window.navigator.userAgent.includes('Chrome') &&
        window.__REDUX_DEVTOOLS_EXTENSION__
        ? window.__REDUX_DEVTOOLS_EXTENSION__()
        : compose
    )
  );

  epicMiddleware.run((action$, state$) =&gt; {
    return rootEpic(action$, state$, {
      store,
      config: {
        onStart: () =&gt; {
          progress.start();
        },
        onFinish: () =&gt; {
          progress.end();
        }
      }
    });
  });

  return store;
}
                                              </code>
                                            </span>
                                          </SyntaxHighlighter>
                                        </ReactAsyncHighlighter>
                                      </Code>
                                    </CodeBlock>
                                    <CopyBlock__Button
                                      copied={false}
                                      data-clipboard-text="import { createStore, applyMiddleware, compose } from 'redux';
import thunk from 'redux-thunk';
import { createEpicMiddleware } from 'redux-observable';

import rootReducer, { rootEpic } from '../reducers/rootReducer';

const epicMiddleware = createEpicMiddleware();

export default function configureStore({ initialState = {} }) {
  const store = createStore(
    rootReducer,
    initialState,
    compose(
      applyMiddleware(thunk, epicMiddleware),
      window.navigator.userAgent.includes('Chrome') &&
        window.__REDUX_DEVTOOLS_EXTENSION__
        ? window.__REDUX_DEVTOOLS_EXTENSION__()
        : compose
    )
  );

  epicMiddleware.run((action$, state$) => {
    return rootEpic(action$, state$, {
      store,
      config: {
        onStart: () => {
          progress.start();
        },
        onFinish: () => {
          progress.end();
        }
      }
    });
  });

  return store;
}"
                                      disabled={false}
                                      id="copy_3"
                                      theme={
                                        Object {
                                          "additionColor": "#e6e1dc",
                                          "attributeColor": "#cda869",
                                          "backgroundColor": "#232323",
                                          "builtInColor": "#6d9cbe",
                                          "bulletColor": "#6d9cbe",
                                          "codeColor": "#e6e1dc",
                                          "commentColor": "#bc9458",
                                          "deletionColor": "#e6e1dc",
                                          "docTagColor": "#e6e1dc",
                                          "functionColor": "#e6e1dc",
                                          "keywordColor": "#c26230",
                                          "lineNumberBgColor": "#232323",
                                          "lineNumberColor": "#e6e1dc",
                                          "linkColor": "#6d9cbe",
                                          "literalColor": "#e6e1dc",
                                          "metaColor": "#9b859d",
                                          "metaKeywordColor": "#e6e1dc",
                                          "nameColor": "#e8bf6a",
                                          "numberColor": "#a5c261",
                                          "quoteColor": "#bc9458",
                                          "regexpColor": "#a5c261",
                                          "sectionColor": "#ffc66d",
                                          "selectorAttributeColor": "#c26230",
                                          "selectorClassColor": "#9b703f",
                                          "selectorIdColor": "#8b98ab",
                                          "stringColor": "#a5c261",
                                          "substringColor": "#519f50",
                                          "symbolColor": "#6d9cbe",
                                          "templateTagColor": "#e6e1dc",
                                          "templateVariableColor": "#a5c261",
                                          "textColor": "#e6e1dc",
                                          "titleColor": "#ffc66d",
                                          "typeColor": "#da4939",
                                          "variableColor": "#a5c261",
                                        }
                                      }
                                    >
                                      <StyledComponent
                                        copied={false}
                                        data-clipboard-text="import { createStore, applyMiddleware, compose } from 'redux';
import thunk from 'redux-thunk';
import { createEpicMiddleware } from 'redux-observable';

import rootReducer, { rootEpic } from '../reducers/rootReducer';

const epicMiddleware = createEpicMiddleware();

export default function configureStore({ initialState = {} }) {
  const store = createStore(
    rootReducer,
    initialState,
    compose(
      applyMiddleware(thunk, epicMiddleware),
      window.navigator.userAgent.includes('Chrome') &&
        window.__REDUX_DEVTOOLS_EXTENSION__
        ? window.__REDUX_DEVTOOLS_EXTENSION__()
        : compose
    )
  );

  epicMiddleware.run((action$, state$) => {
    return rootEpic(action$, state$, {
      store,
      config: {
        onStart: () => {
          progress.start();
        },
        onFinish: () => {
          progress.end();
        }
      }
    });
  });

  return store;
}"
                                        disabled={false}
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "CopyBlock__Button-sc-109lwr7-0",
                                              "isStatic": false,
                                              "lastClassName": "kMLoBg",
                                              "rules": Array [
                                                "position:absolute;top:0;right:0;margin-right:0.25rem;display:flex;flex-wrap:wrap;justify-content:center;align-items:center;background:",
                                                [Function],
                                                ";margin-top:0.15rem;border-radius:0.25rem;max-height:2rem;max-width:2rem;padding:0.5rem;&:hover{opacity:",
                                                [Function],
                                                ";}&:focus{outline:none;opacity:1;}.icon{width:1rem;height:1rem;}",
                                              ],
                                            },
                                            "displayName": "CopyBlock__Button",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "CopyBlock__Button-sc-109lwr7-0",
                                            "target": "button",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        id="copy_3"
                                        theme={
                                          Object {
                                            "additionColor": "#e6e1dc",
                                            "attributeColor": "#cda869",
                                            "backgroundColor": "#232323",
                                            "builtInColor": "#6d9cbe",
                                            "bulletColor": "#6d9cbe",
                                            "codeColor": "#e6e1dc",
                                            "commentColor": "#bc9458",
                                            "deletionColor": "#e6e1dc",
                                            "docTagColor": "#e6e1dc",
                                            "functionColor": "#e6e1dc",
                                            "keywordColor": "#c26230",
                                            "lineNumberBgColor": "#232323",
                                            "lineNumberColor": "#e6e1dc",
                                            "linkColor": "#6d9cbe",
                                            "literalColor": "#e6e1dc",
                                            "metaColor": "#9b859d",
                                            "metaKeywordColor": "#e6e1dc",
                                            "nameColor": "#e8bf6a",
                                            "numberColor": "#a5c261",
                                            "quoteColor": "#bc9458",
                                            "regexpColor": "#a5c261",
                                            "sectionColor": "#ffc66d",
                                            "selectorAttributeColor": "#c26230",
                                            "selectorClassColor": "#9b703f",
                                            "selectorIdColor": "#8b98ab",
                                            "stringColor": "#a5c261",
                                            "substringColor": "#519f50",
                                            "symbolColor": "#6d9cbe",
                                            "templateTagColor": "#e6e1dc",
                                            "templateVariableColor": "#a5c261",
                                            "textColor": "#e6e1dc",
                                            "titleColor": "#ffc66d",
                                            "typeColor": "#da4939",
                                            "variableColor": "#a5c261",
                                          }
                                        }
                                      >
                                        <button
                                          className="CopyBlock__Button-sc-109lwr7-0 kMLoBg"
                                          data-clipboard-text="import { createStore, applyMiddleware, compose } from 'redux';
import thunk from 'redux-thunk';
import { createEpicMiddleware } from 'redux-observable';

import rootReducer, { rootEpic } from '../reducers/rootReducer';

const epicMiddleware = createEpicMiddleware();

export default function configureStore({ initialState = {} }) {
  const store = createStore(
    rootReducer,
    initialState,
    compose(
      applyMiddleware(thunk, epicMiddleware),
      window.navigator.userAgent.includes('Chrome') &&
        window.__REDUX_DEVTOOLS_EXTENSION__
        ? window.__REDUX_DEVTOOLS_EXTENSION__()
        : compose
    )
  );

  epicMiddleware.run((action$, state$) => {
    return rootEpic(action$, state$, {
      store,
      config: {
        onStart: () => {
          progress.start();
        },
        onFinish: () => {
          progress.end();
        }
      }
    });
  });

  return store;
}"
                                          disabled={false}
                                          id="copy_3"
                                        >
                                          <_default
                                            className="icon"
                                            color="#e6e1dc"
                                            copied={false}
                                          >
                                            <ClipboardListIcon
                                              className="icon"
                                              color="#e6e1dc"
                                              size={24}
                                            >
                                              <svg
                                                className="icon"
                                                fill="#e6e1dc"
                                                height={24}
                                                viewBox="0 0 384 512"
                                                width={24}
                                              >
                                                <path
                                                  d="M280 240H168c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8h112c4.4 0 8-3.6 8-8v-16c0-4.4-3.6-8-8-8zm0 96H168c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8h112c4.4 0 8-3.6 8-8v-16c0-4.4-3.6-8-8-8zM112 232c-13.3 0-24 10.7-24 24s10.7 24 24 24 24-10.7 24-24-10.7-24-24-24zm0 96c-13.3 0-24 10.7-24 24s10.7 24 24 24 24-10.7 24-24-10.7-24-24-24zM336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 48c8.8 0 16 7.2 16 16s-7.2 16-16 16-16-7.2-16-16 7.2-16 16-16zm144 408c0 4.4-3.6 8-8 8H56c-4.4 0-8-3.6-8-8V120c0-4.4 3.6-8 8-8h40v32c0 8.8 7.2 16 16 16h160c8.8 0 16-7.2 16-16v-32h40c4.4 0 8 3.6 8 8v336z"
                                                />
                                              </svg>
                                            </ClipboardListIcon>
                                          </_default>
                                        </button>
                                      </StyledComponent>
                                    </CopyBlock__Button>
                                  </div>
                                </StyledComponent>
                              </CopyBlock__Snippet>
                            </_default>
                          </WithTheme(_default)>
                        </ThemeProvider>
                      </_default>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </Advanced>
        </div>
      </div>
    </App>
  </Connect(App)>
  <Connect(ReduxToastr)
    closeOnToastrClick={true}
    getState={[Function]}
    newestOnTop={false}
    position="bottom-right"
    preventDuplicates={true}
    progressBar={true}
    timeOut={4000}
    transitionIn="fadeIn"
    transitionOut="fadeOut"
  >
    <ReduxToastr
      add={[Function]}
      clean={[Function]}
      closeOnToastrClick={true}
      confirmOptions={
        Object {
          "cancelText": "cancel",
          "okText": "ok",
        }
      }
      getState={[Function]}
      hideConfirm={[Function]}
      newestOnTop={false}
      position="bottom-right"
      preventDuplicates={true}
      progressBar={true}
      remove={[Function]}
      removeByType={[Function]}
      showConfirm={[Function]}
      timeOut={4000}
      toastr={
        Object {
          "confirm": null,
          "toastrs": Array [],
        }
      }
      transitionIn="fadeIn"
      transitionOut="fadeOut"
    >
      <div
        aria-live="assertive"
        className="redux-toastr"
      >
        <div>
          <div
            className="top-left"
            key="top-left"
            style={Object {}}
          />
          <div
            className="top-right"
            key="top-right"
            style={Object {}}
          />
          <div
            className="top-center"
            key="top-center"
            style={Object {}}
          />
          <div
            className="bottom-left"
            key="bottom-left"
            style={Object {}}
          />
          <div
            className="bottom-right"
            key="bottom-right"
            style={Object {}}
          />
          <div
            className="bottom-center"
            key="bottom-center"
            style={Object {}}
          />
        </div>
      </div>
    </ReduxToastr>
  </Connect(ReduxToastr)>
</Provider>
`;
